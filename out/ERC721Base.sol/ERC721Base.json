{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002ff238038062002ff283398101604081905262000034916200040b565b733cc6cdda760b79bafa08df41ecfa224f810dceb66001858560026200005b838262000549565b5060036200006a828262000549565b505060008055506200007d8282620000b7565b506200008b905085620001e5565b620000a0826001600160801b03831662000237565b620000ac6001620002e2565b505050505062000615565b6daaeb6d7670e522a718067333cd4e3b15620001e1576001600160a01b0382163b156200019a5780156200015957604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200013c57600080fd5b505af115801562000151573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af29039060440162000121565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200013c57600080fd5b5050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620002805760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b80516001600160a01b03811681146200034157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200036e57600080fd5b81516001600160401b03808211156200038b576200038b62000346565b604051601f8301601f19908116603f01168101908282118183101715620003b657620003b662000346565b81604052838152602092508683858801011115620003d357600080fd5b600091505b83821015620003f75785820183015181830184015290820190620003d8565b600093810190920192909252949350505050565b600080600080600060a086880312156200042457600080fd5b6200042f8662000329565b60208701519095506001600160401b03808211156200044d57600080fd5b6200045b89838a016200035c565b955060408801519150808211156200047257600080fd5b5062000481888289016200035c565b935050620004926060870162000329565b60808701519092506001600160801b0381168114620004b057600080fd5b809150509295509295909350565b600181811c90821680620004d357607f821691505b602082108103620004f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200054457600081815260208120601f850160051c81016020861015620005235750805b601f850160051c820191505b8181101562000151578281556001016200052f565b505050565b81516001600160401b0381111562000565576200056562000346565b6200057d81620005768454620004be565b84620004fa565b602080601f831160018114620005b557600084156200059c5750858301515b600019600386901b1c1916600185901b17855562000151565b600085815260208120601f198616915b82811015620005e657888601518255948401946001909101908401620005c5565b5085821015620006055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6129cd80620006256000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c8063504c6e011161012557806395d89b41116100ad578063b24f2d391161007c578063b24f2d39146104aa578063b88d4fde146104c8578063c87b56dd146104db578063e8a3d485146104ee578063e985e9c5146104f657600080fd5b806395d89b411461045c5780639bcf7a1514610464578063a22cb46514610477578063ac9650d81461048a57600080fd5b806363b45e2d116100f457806363b45e2d1461040a57806370a0823114610412578063754a81d9146104255780638da5cb5b14610438578063938e3d7b1461044957600080fd5b8063504c6e01146103c457806357fd8455146103d1578063600dd5ea146103e45780636352211e146103f757600080fd5b80632419f51b116101a857806341f434341161017757806341f434341461034157806342842e0e1461035657806342966c6814610369578063430c20811461037c5780634cc157df1461038f57600080fd5b80632419f51b146102e15780632a55205a146102f457806332f0cd64146103265780633b1475a71461033957600080fd5b8063095ea7b3116101e4578063095ea7b31461029257806313af4035146102a557806318160ddd146102b857806323b872dd146102ce57600080fd5b806275a3171461021557806301ffc9a71461022a57806306fdde0314610252578063081812fc14610267575b600080fd5b6102286102233660046121bb565b610532565b005b61023d61023836600461221e565b6105b6565b60405190151581526020015b60405180910390f35b61025a610623565b604051610249919061228b565b61027a61027536600461229e565b6106b5565b6040516001600160a01b039091168152602001610249565b6102286102a03660046122b7565b6106f9565b6102286102b33660046122e1565b610712565b600154600054035b604051908152602001610249565b6102286102dc3660046122fc565b610742565b6102c06102ef36600461229e565b61076d565b610307610302366004612338565b6107db565b604080516001600160a01b039093168352602083019190915201610249565b610228610334366004612368565b610818565b6000546102c0565b61027a6daaeb6d7670e522a718067333cd4e81565b6102286103643660046122fc565b610889565b61022861037736600461229e565b6108ae565b61023d61038a3660046122b7565b6108b9565b6103a261039d36600461229e565b610938565b604080516001600160a01b03909316835261ffff909116602083015201610249565b600e5461023d9060ff1681565b6102286103df3660046122e1565b6109a3565b6102286103f23660046122b7565b610a13565b61027a61040536600461229e565b610a41565b600c546102c0565b6102c06104203660046122e1565b610a53565b610228610433366004612385565b610aa1565b6009546001600160a01b031661027a565b610228610457366004612402565b610b0f565b61025a610b3c565b610228610472366004612436565b610b4b565b61022861048536600461245b565b610b7a565b61049d610498366004612492565b610b8e565b6040516102499190612506565b600a546001600160a01b03811690600160a01b900461ffff166103a2565b6102286104d6366004612568565b610c82565b61025a6104e936600461229e565b610caf565b61025a610d9d565b61023d6105043660046125c3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61053a610e2b565b6105855760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064015b60405180910390fd5b61059761059160005490565b82610e58565b6105b282600160405180602001604052806000815250610eca565b5050565b60006301ffc9a760e01b6001600160e01b0319831614806105e757506380ac58cd60e01b6001600160e01b03198316145b806106025750635b5e139f60e01b6001600160e01b03198316145b8061061d57506001600160e01b0319821663152a902d60e11b145b92915050565b606060028054610632906125f6565b80601f016020809104026020016040519081016040528092919081815260200182805461065e906125f6565b80156106ab5780601f10610680576101008083540402835291602001916106ab565b820191906000526020600020905b81548152906001019060200180831161068e57829003601f168201915b5050505050905090565b60006106c08261106d565b6106dd576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b8161070381611098565b61070d838361115c565b505050565b61071a610e2b565b6107365760405162461bcd60e51b815260040161057c90612630565b61073f816111dd565b50565b826001600160a01b038116331461075c5761075c33611098565b61076784848461122f565b50505050565b6000610778600c5490565b82106107b65760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161057c565b600c82815481106107c9576107c9612658565b90600052602060002001549050919050565b6000806000806107ea86610938565b90945084925061ffff1690506127106108038287612684565b61080d91906126b1565b925050509250929050565b610820610e2b565b6108805760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b606482015260840161057c565b61073f8161123a565b826001600160a01b03811633146108a3576108a333611098565b610767848484611281565b61073f81600161129c565b6000806108c583610a41565b9050806001600160a01b0316846001600160a01b0316148061090c57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806109305750836001600160a01b0316610925846106b5565b6001600160a01b0316145b949350505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561097f5780516020820151610999565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6109ab610e2b565b610a085760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b606482015260840161057c565b61073f81600161144f565b610a1b610e2b565b610a375760405162461bcd60e51b815260040161057c90612630565b6105b2828261155d565b6000610a4c82611603565b5192915050565b60006001600160a01b038216610a7c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610aa9610e2b565b610aef5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604482015260640161057c565b610b02610afb60005490565b848461171d565b5050610767848483610eca565b610b17610e2b565b610b335760405162461bcd60e51b815260040161057c90612630565b61073f81611781565b606060038054610632906125f6565b610b53610e2b565b610b6f5760405162461bcd60e51b815260040161057c90612630565b61070d83838361185d565b81610b8481611098565b61070d8383611926565b6060816001600160401b03811115610ba857610ba8612119565b604051908082528060200260200182016040528015610bdb57816020015b6060815260200190600190039081610bc65790505b50905060005b82811015610c7b57610c4b30858584818110610bff57610bff612658565b9050602002810190610c1191906126c5565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119bb92505050565b828281518110610c5d57610c5d612658565b60200260200101819052508080610c7390612712565b915050610be1565b5092915050565b836001600160a01b0381163314610c9c57610c9c33611098565b610ca8858585856119e7565b5050505050565b6000818152600f6020526040812080546060929190610ccd906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf9906125f6565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b50505050509050600081511115610d5d5792915050565b6000610d6884611a2b565b905080610d7485611bc7565b604051602001610d8592919061272b565b60405160208183030381529060405292505050919050565b60088054610daa906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd6906125f6565b8015610e235780601f10610df857610100808354040283529160200191610e23565b820191906000526020600020905b815481529060010190602001808311610e0657829003601f168201915b505050505081565b6000610e3f6009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f602052604090208054610e71906125f6565b159050610eb25760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b604482015260640161057c565b6000828152600f6020526040902061070d82826127a0565b6000546001600160a01b038416610ef357604051622e076360e81b815260040160405180910390fd5b82600003610f145760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b1561102a575b60405182906001600160a01b03881690600090600080516020612978833981519152908290a4610ff36000878480600101955087611cc7565b611010576040516368d2bf6b60e11b815260040160405180910390fd5b808210610fba57826000541461102557600080fd5b61105d565b5b6040516001830192906001600160a01b03881690600090600080516020612978833981519152908290a480821061102b575b5060009081556107679085838684565b600080548210801561061d575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff161561073f576daaeb6d7670e522a718067333cd4e3b1561073f57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611134919061285f565b61073f57604051633b79c77360e21b81526001600160a01b038216600482015260240161057c565b600061116782610a41565b9050806001600160a01b0316836001600160a01b03160361119b5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146111d2576111b58133610504565b6111d2576040516367d9dca160e11b815260040160405180910390fd5b61070d838383611db2565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61070d838383611e0e565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b61070d83838360405180602001604052806000815250610c82565b60006112a783611603565b8051909150821561130d576000336001600160a01b03831614806112d057506112d08233610504565b806112eb5750336112e0866106b5565b6001600160a01b0316145b90508061130b57604051632ce44b5f60e11b815260040160405180910390fd5b505b61131960008583611db2565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b0380841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661141757600054821461141757805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020612978833981519152908390a4505060018054810190555050565b6daaeb6d7670e522a718067333cd4e3b156105b2576001600160a01b0382163b1561152c5780156114ec57604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156114d057600080fd5b505af11580156114e4573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af2903906044016114b6565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e486906024016114b6565b6127108111156115a15760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161057c565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b60408051606081018252600080825260208201819052918101919091528160005481101561170457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906117025780516001600160a01b031615611699579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156116fd579392505050565b611699565b505b604051636f96cda160e11b815260040160405180910390fd5b60008061172a848661287c565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d6020526040902090925082915061177884826127a0565b50935093915050565b600060088054611790906125f6565b80601f01602080910402602001604051908101604052809291908181526020018280546117bc906125f6565b80156118095780601f106117de57610100808354040283529160200191611809565b820191906000526020600020905b8154815290600101906020018083116117ec57829003601f168201915b50505050509050816008908161181f91906127a0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161185192919061288f565b60405180910390a15050565b6127108111156118a15760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161057c565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b336001600160a01b0383160361194f5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606119e0838360405180606001604052806027815260200161295160279139611fe7565b9392505050565b6119f2848484611e0e565b6001600160a01b0383163b1561076757611a0e84848484611cc7565b610767576040516368d2bf6b60e11b815260040160405180910390fd5b60606000611a38600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611a8857602002820191906000526020600020905b815481526020019060010190808311611a74575b5050505050905060005b82811015611b8c57818181518110611aac57611aac612658565b6020026020010151851015611b7a57600d6000838381518110611ad157611ad1612658565b602002602001015181526020019081526020016000208054611af2906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1e906125f6565b8015611b6b5780601f10611b4057610100808354040283529160200191611b6b565b820191906000526020600020905b815481529060010190602001808311611b4e57829003601f168201915b50505050509350505050919050565b611b8560018261287c565b9050611a92565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161057c565b606081600003611bee5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c185780611c0281612712565b9150611c119050600a836126b1565b9150611bf2565b6000816001600160401b03811115611c3257611c32612119565b6040519080825280601f01601f191660200182016040528015611c5c576020820181803683370190505b5090505b841561093057611c716001836128bd565b9150611c7e600a866128d0565b611c8990603061287c565b60f81b818381518110611c9e57611c9e612658565b60200101906001600160f81b031916908160001a905350611cc0600a866126b1565b9450611c60565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611cfc9033908990889088906004016128e4565b6020604051808303816000875af1925050508015611d37575060408051601f3d908101601f19168201909252611d3491810190612917565b60015b611d95573d808015611d65576040519150601f19603f3d011682016040523d82523d6000602084013e611d6a565b606091505b508051600003611d8d576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611e1982611603565b9050836001600160a01b031681600001516001600160a01b031614611e505760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611e6e5750611e6e8533610504565b80611e89575033611e7e846106b5565b6001600160a01b0316145b905080611ea957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611ed057604051633a954ecd60e21b815260040160405180910390fd5b611edc60008487611db2565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611fb0576000548214611fb057805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061297883398151915260405160405180910390a4610ca8565b60606001600160a01b0384163b61204f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161057c565b600080856001600160a01b03168560405161206a9190612934565b600060405180830381855af49150503d80600081146120a5576040519150601f19603f3d011682016040523d82523d6000602084013e6120aa565b606091505b50915091506120ba8282866120c4565b9695505050505050565b606083156120d35750816119e0565b8251156120e35782518084602001fd5b8160405162461bcd60e51b815260040161057c919061228b565b80356001600160a01b038116811461211457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261214057600080fd5b81356001600160401b038082111561215a5761215a612119565b604051601f8301601f19908116603f0116810190828211818310171561218257612182612119565b8160405283815286602085880101111561219b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156121ce57600080fd5b6121d7836120fd565b915060208301356001600160401b038111156121f257600080fd5b6121fe8582860161212f565b9150509250929050565b6001600160e01b03198116811461073f57600080fd5b60006020828403121561223057600080fd5b81356119e081612208565b60005b8381101561225657818101518382015260200161223e565b50506000910152565b6000815180845261227781602086016020860161223b565b601f01601f19169290920160200192915050565b6020815260006119e0602083018461225f565b6000602082840312156122b057600080fd5b5035919050565b600080604083850312156122ca57600080fd5b6122d3836120fd565b946020939093013593505050565b6000602082840312156122f357600080fd5b6119e0826120fd565b60008060006060848603121561231157600080fd5b61231a846120fd565b9250612328602085016120fd565b9150604084013590509250925092565b6000806040838503121561234b57600080fd5b50508035926020909101359150565b801515811461073f57600080fd5b60006020828403121561237a57600080fd5b81356119e08161235a565b6000806000806080858703121561239b57600080fd5b6123a4856120fd565b93506020850135925060408501356001600160401b03808211156123c757600080fd5b6123d38883890161212f565b935060608701359150808211156123e957600080fd5b506123f68782880161212f565b91505092959194509250565b60006020828403121561241457600080fd5b81356001600160401b0381111561242a57600080fd5b6109308482850161212f565b60008060006060848603121561244b57600080fd5b83359250612328602085016120fd565b6000806040838503121561246e57600080fd5b612477836120fd565b915060208301356124878161235a565b809150509250929050565b600080602083850312156124a557600080fd5b82356001600160401b03808211156124bc57600080fd5b818501915085601f8301126124d057600080fd5b8135818111156124df57600080fd5b8660208260051b85010111156124f457600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561255b57603f1988860301845261254985835161225f565b9450928501929085019060010161252d565b5092979650505050505050565b6000806000806080858703121561257e57600080fd5b612587856120fd565b9350612595602086016120fd565b92506040850135915060608501356001600160401b038111156125b757600080fd5b6123f68782880161212f565b600080604083850312156125d657600080fd5b6125df836120fd565b91506125ed602084016120fd565b90509250929050565b600181811c9082168061260a57607f821691505b60208210810361262a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761061d5761061d61266e565b634e487b7160e01b600052601260045260246000fd5b6000826126c0576126c061269b565b500490565b6000808335601e198436030181126126dc57600080fd5b8301803591506001600160401b038211156126f657600080fd5b60200191503681900382131561270b57600080fd5b9250929050565b6000600182016127245761272461266e565b5060010190565b6000835161273d81846020880161223b565b83519083019061275181836020880161223b565b01949350505050565b601f82111561070d57600081815260208120601f850160051c810160208610156127815750805b601f850160051c820191505b818110156114e45782815560010161278d565b81516001600160401b038111156127b9576127b9612119565b6127cd816127c784546125f6565b8461275a565b602080601f83116001811461280257600084156127ea5750858301515b600019600386901b1c1916600185901b1785556114e4565b600085815260208120601f198616915b8281101561283157888601518255948401946001909101908401612812565b508582101561284f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561287157600080fd5b81516119e08161235a565b8082018082111561061d5761061d61266e565b6040815260006128a2604083018561225f565b82810360208401526128b4818561225f565b95945050505050565b8181038181111561061d5761061d61266e565b6000826128df576128df61269b565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ba9083018461225f565b60006020828403121561292957600080fd5b81516119e081612208565b6000825161294681846020870161223b565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220eca5e27ba6a0a68397da8a7236b64297dfc05955341eb803c9820d61314cb93364736f6c63430008150033",
    "sourceMap": "1128:8221:18:-:0;;;1722:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:42:29;516:4;1903:5:18;1910:7;1885:5:20;:13;1903:5:18;1885::20;:13;:::i;:::-;-1:-1:-1;1908:7:20;:17;1918:7;1908;:17;:::i;:::-;-1:-1:-1;;2121:7:20;1935:31;;-1:-1:-1;1313:52:32;1323:30;1355:9;1313;:52::i;:::-;-1:-1:-1;1929:26:18::1;::::0;-1:-1:-1;1941:13:18;1929:11:::1;:26::i;:::-;1965:56;1990:17:::0;-1:-1:-1;;;;;1965:56:18;::::1;:24;:56::i;:::-;2031:29;2055:4;2031:23;:29::i;:::-;1722:345:::0;;;;;1128:8221;;2349:783:32;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:32;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:32;;2817:4;2763:92;;;4880:34:46;-1:-1:-1;;;;;4950:15:46;;4930:18;;;4923:43;905:42:32;;2763:45;;4815:18:46;;2763:92:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:32;;2958:4;2902:94;;;4880:34:46;-1:-1:-1;;;;;4950:15:46;;4930:18;;;4923:43;905:42:32;;2902:47;;4815:18:46;;2902:94:32;4668:304:46;2603:513:32;3053:48;;-1:-1:-1;;;3053:48:32;;3095:4;3053:48;;;5123:51:46;905:42:32;;3053:33;;5096:18:46;;3053:48:32;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:33:-;1501:6;;;-1:-1:-1;;;;;1517:18:33;;;-1:-1:-1;;;;;;1517:18:33;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:34:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:34;;5387:2:46;3571:25:34;;;5369:21:46;5426:2;5406:18;;;5399:30;-1:-1:-1;;;5445:18:46;;;5438:45;5500:18;;3571:25:34;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:34;;-1:-1:-1;;;;;;3663:32:34;;;;;-1:-1:-1;;;3663:32:34;;;;;;;;3711:46;;5675:25:46;;;3711:46:34;;5663:2:46;5648:18;3711:46:34;;;;;;;3430:334;;:::o;457:160:31:-;528:19;:34;;-1:-1:-1;;528:34:31;;;;;;;;;;577:33;;5851:41:46;;;577:33:31;;5839:2:46;5824:18;577:33:31;;;;;;;457:160;:::o;14:177:46:-;93:13;;-1:-1:-1;;;;;135:31:46;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:840;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:46;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:46;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1136:1;1114:15;;;1110:24;;;1103:35;;;;1118:6;328:840;-1:-1:-1;;;;328:840:46:o;1173:901::-;1299:6;1307;1315;1323;1331;1384:3;1372:9;1363:7;1359:23;1355:33;1352:53;;;1401:1;1398;1391:12;1352:53;1424:40;1454:9;1424:40;:::i;:::-;1508:2;1493:18;;1487:25;1414:50;;-1:-1:-1;;;;;;1561:14:46;;;1558:34;;;1588:1;1585;1578:12;1558:34;1611:61;1664:7;1655:6;1644:9;1640:22;1611:61;:::i;:::-;1601:71;;1718:2;1707:9;1703:18;1697:25;1681:41;;1747:2;1737:8;1734:16;1731:36;;;1763:1;1760;1753:12;1731:36;;1786:63;1841:7;1830:8;1819:9;1815:24;1786:63;:::i;:::-;1776:73;;;1868:49;1913:2;1902:9;1898:18;1868:49;:::i;:::-;1960:3;1945:19;;1939:26;1858:59;;-1:-1:-1;;;;;;1994:31:46;;1984:42;;1974:70;;2040:1;2037;2030:12;1974:70;2063:5;2053:15;;;1173:901;;;;;;;;:::o;2079:380::-;2158:1;2154:12;;;;2201;;;2222:61;;2276:4;2268:6;2264:17;2254:27;;2222:61;2329:2;2321:6;2318:14;2298:18;2295:38;2292:161;;2375:10;2370:3;2366:20;2363:1;2356:31;2410:4;2407:1;2400:15;2438:4;2435:1;2428:15;2292:161;;2079:380;;;:::o;2590:545::-;2692:2;2687:3;2684:11;2681:448;;;2728:1;2753:5;2749:2;2742:17;2798:4;2794:2;2784:19;2868:2;2856:10;2852:19;2849:1;2845:27;2839:4;2835:38;2904:4;2892:10;2889:20;2886:47;;;-1:-1:-1;2927:4:46;2886:47;2982:2;2977:3;2973:12;2970:1;2966:20;2960:4;2956:31;2946:41;;3037:82;3055:2;3048:5;3045:13;3037:82;;;3100:17;;;3081:1;3070:13;3037:82;;2681:448;2590:545;;;:::o;3311:1352::-;3431:10;;-1:-1:-1;;;;;3453:30:46;;3450:56;;;3486:18;;:::i;:::-;3515:97;3605:6;3565:38;3597:4;3591:11;3565:38;:::i;:::-;3559:4;3515:97;:::i;:::-;3667:4;;3731:2;3720:14;;3748:1;3743:663;;;;4450:1;4467:6;4464:89;;;-1:-1:-1;4519:19:46;;;4513:26;4464:89;-1:-1:-1;;3268:1:46;3264:11;;;3260:24;3256:29;3246:40;3292:1;3288:11;;;3243:57;4566:81;;3713:944;;3743:663;2537:1;2530:14;;;2574:4;2561:18;;-1:-1:-1;;3779:20:46;;;3897:236;3911:7;3908:1;3905:14;3897:236;;;4000:19;;;3994:26;3979:42;;4092:27;;;;4060:1;4048:14;;;;3927:19;;3897:236;;;3901:3;4161:6;4152:7;4149:19;4146:201;;;4222:19;;;4216:26;-1:-1:-1;;4305:1:46;4301:14;;;4317:3;4297:24;4293:37;4289:42;4274:58;4259:74;;4146:201;-1:-1:-1;;;;;4393:1:46;4377:14;;;4373:22;4360:36;;-1:-1:-1;3311:1352:46:o;5711:187::-;1128:8221:18;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102105760003560e01c8063504c6e011161012557806395d89b41116100ad578063b24f2d391161007c578063b24f2d39146104aa578063b88d4fde146104c8578063c87b56dd146104db578063e8a3d485146104ee578063e985e9c5146104f657600080fd5b806395d89b411461045c5780639bcf7a1514610464578063a22cb46514610477578063ac9650d81461048a57600080fd5b806363b45e2d116100f457806363b45e2d1461040a57806370a0823114610412578063754a81d9146104255780638da5cb5b14610438578063938e3d7b1461044957600080fd5b8063504c6e01146103c457806357fd8455146103d1578063600dd5ea146103e45780636352211e146103f757600080fd5b80632419f51b116101a857806341f434341161017757806341f434341461034157806342842e0e1461035657806342966c6814610369578063430c20811461037c5780634cc157df1461038f57600080fd5b80632419f51b146102e15780632a55205a146102f457806332f0cd64146103265780633b1475a71461033957600080fd5b8063095ea7b3116101e4578063095ea7b31461029257806313af4035146102a557806318160ddd146102b857806323b872dd146102ce57600080fd5b806275a3171461021557806301ffc9a71461022a57806306fdde0314610252578063081812fc14610267575b600080fd5b6102286102233660046121bb565b610532565b005b61023d61023836600461221e565b6105b6565b60405190151581526020015b60405180910390f35b61025a610623565b604051610249919061228b565b61027a61027536600461229e565b6106b5565b6040516001600160a01b039091168152602001610249565b6102286102a03660046122b7565b6106f9565b6102286102b33660046122e1565b610712565b600154600054035b604051908152602001610249565b6102286102dc3660046122fc565b610742565b6102c06102ef36600461229e565b61076d565b610307610302366004612338565b6107db565b604080516001600160a01b039093168352602083019190915201610249565b610228610334366004612368565b610818565b6000546102c0565b61027a6daaeb6d7670e522a718067333cd4e81565b6102286103643660046122fc565b610889565b61022861037736600461229e565b6108ae565b61023d61038a3660046122b7565b6108b9565b6103a261039d36600461229e565b610938565b604080516001600160a01b03909316835261ffff909116602083015201610249565b600e5461023d9060ff1681565b6102286103df3660046122e1565b6109a3565b6102286103f23660046122b7565b610a13565b61027a61040536600461229e565b610a41565b600c546102c0565b6102c06104203660046122e1565b610a53565b610228610433366004612385565b610aa1565b6009546001600160a01b031661027a565b610228610457366004612402565b610b0f565b61025a610b3c565b610228610472366004612436565b610b4b565b61022861048536600461245b565b610b7a565b61049d610498366004612492565b610b8e565b6040516102499190612506565b600a546001600160a01b03811690600160a01b900461ffff166103a2565b6102286104d6366004612568565b610c82565b61025a6104e936600461229e565b610caf565b61025a610d9d565b61023d6105043660046125c3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61053a610e2b565b6105855760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064015b60405180910390fd5b61059761059160005490565b82610e58565b6105b282600160405180602001604052806000815250610eca565b5050565b60006301ffc9a760e01b6001600160e01b0319831614806105e757506380ac58cd60e01b6001600160e01b03198316145b806106025750635b5e139f60e01b6001600160e01b03198316145b8061061d57506001600160e01b0319821663152a902d60e11b145b92915050565b606060028054610632906125f6565b80601f016020809104026020016040519081016040528092919081815260200182805461065e906125f6565b80156106ab5780601f10610680576101008083540402835291602001916106ab565b820191906000526020600020905b81548152906001019060200180831161068e57829003601f168201915b5050505050905090565b60006106c08261106d565b6106dd576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b8161070381611098565b61070d838361115c565b505050565b61071a610e2b565b6107365760405162461bcd60e51b815260040161057c90612630565b61073f816111dd565b50565b826001600160a01b038116331461075c5761075c33611098565b61076784848461122f565b50505050565b6000610778600c5490565b82106107b65760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161057c565b600c82815481106107c9576107c9612658565b90600052602060002001549050919050565b6000806000806107ea86610938565b90945084925061ffff1690506127106108038287612684565b61080d91906126b1565b925050509250929050565b610820610e2b565b6108805760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b606482015260840161057c565b61073f8161123a565b826001600160a01b03811633146108a3576108a333611098565b610767848484611281565b61073f81600161129c565b6000806108c583610a41565b9050806001600160a01b0316846001600160a01b0316148061090c57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806109305750836001600160a01b0316610925846106b5565b6001600160a01b0316145b949350505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561097f5780516020820151610999565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6109ab610e2b565b610a085760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b606482015260840161057c565b61073f81600161144f565b610a1b610e2b565b610a375760405162461bcd60e51b815260040161057c90612630565b6105b2828261155d565b6000610a4c82611603565b5192915050565b60006001600160a01b038216610a7c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610aa9610e2b565b610aef5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604482015260640161057c565b610b02610afb60005490565b848461171d565b5050610767848483610eca565b610b17610e2b565b610b335760405162461bcd60e51b815260040161057c90612630565b61073f81611781565b606060038054610632906125f6565b610b53610e2b565b610b6f5760405162461bcd60e51b815260040161057c90612630565b61070d83838361185d565b81610b8481611098565b61070d8383611926565b6060816001600160401b03811115610ba857610ba8612119565b604051908082528060200260200182016040528015610bdb57816020015b6060815260200190600190039081610bc65790505b50905060005b82811015610c7b57610c4b30858584818110610bff57610bff612658565b9050602002810190610c1191906126c5565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119bb92505050565b828281518110610c5d57610c5d612658565b60200260200101819052508080610c7390612712565b915050610be1565b5092915050565b836001600160a01b0381163314610c9c57610c9c33611098565b610ca8858585856119e7565b5050505050565b6000818152600f6020526040812080546060929190610ccd906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf9906125f6565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b50505050509050600081511115610d5d5792915050565b6000610d6884611a2b565b905080610d7485611bc7565b604051602001610d8592919061272b565b60405160208183030381529060405292505050919050565b60088054610daa906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd6906125f6565b8015610e235780601f10610df857610100808354040283529160200191610e23565b820191906000526020600020905b815481529060010190602001808311610e0657829003601f168201915b505050505081565b6000610e3f6009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f602052604090208054610e71906125f6565b159050610eb25760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b604482015260640161057c565b6000828152600f6020526040902061070d82826127a0565b6000546001600160a01b038416610ef357604051622e076360e81b815260040160405180910390fd5b82600003610f145760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b1561102a575b60405182906001600160a01b03881690600090600080516020612978833981519152908290a4610ff36000878480600101955087611cc7565b611010576040516368d2bf6b60e11b815260040160405180910390fd5b808210610fba57826000541461102557600080fd5b61105d565b5b6040516001830192906001600160a01b03881690600090600080516020612978833981519152908290a480821061102b575b5060009081556107679085838684565b600080548210801561061d575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff161561073f576daaeb6d7670e522a718067333cd4e3b1561073f57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611134919061285f565b61073f57604051633b79c77360e21b81526001600160a01b038216600482015260240161057c565b600061116782610a41565b9050806001600160a01b0316836001600160a01b03160361119b5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146111d2576111b58133610504565b6111d2576040516367d9dca160e11b815260040160405180910390fd5b61070d838383611db2565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61070d838383611e0e565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b61070d83838360405180602001604052806000815250610c82565b60006112a783611603565b8051909150821561130d576000336001600160a01b03831614806112d057506112d08233610504565b806112eb5750336112e0866106b5565b6001600160a01b0316145b90508061130b57604051632ce44b5f60e11b815260040160405180910390fd5b505b61131960008583611db2565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b0380841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661141757600054821461141757805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020612978833981519152908390a4505060018054810190555050565b6daaeb6d7670e522a718067333cd4e3b156105b2576001600160a01b0382163b1561152c5780156114ec57604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156114d057600080fd5b505af11580156114e4573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af2903906044016114b6565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e486906024016114b6565b6127108111156115a15760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161057c565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b60408051606081018252600080825260208201819052918101919091528160005481101561170457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906117025780516001600160a01b031615611699579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156116fd579392505050565b611699565b505b604051636f96cda160e11b815260040160405180910390fd5b60008061172a848661287c565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d6020526040902090925082915061177884826127a0565b50935093915050565b600060088054611790906125f6565b80601f01602080910402602001604051908101604052809291908181526020018280546117bc906125f6565b80156118095780601f106117de57610100808354040283529160200191611809565b820191906000526020600020905b8154815290600101906020018083116117ec57829003601f168201915b50505050509050816008908161181f91906127a0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161185192919061288f565b60405180910390a15050565b6127108111156118a15760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161057c565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b336001600160a01b0383160361194f5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606119e0838360405180606001604052806027815260200161295160279139611fe7565b9392505050565b6119f2848484611e0e565b6001600160a01b0383163b1561076757611a0e84848484611cc7565b610767576040516368d2bf6b60e11b815260040160405180910390fd5b60606000611a38600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611a8857602002820191906000526020600020905b815481526020019060010190808311611a74575b5050505050905060005b82811015611b8c57818181518110611aac57611aac612658565b6020026020010151851015611b7a57600d6000838381518110611ad157611ad1612658565b602002602001015181526020019081526020016000208054611af2906125f6565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1e906125f6565b8015611b6b5780601f10611b4057610100808354040283529160200191611b6b565b820191906000526020600020905b815481529060010190602001808311611b4e57829003601f168201915b50505050509350505050919050565b611b8560018261287c565b9050611a92565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161057c565b606081600003611bee5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c185780611c0281612712565b9150611c119050600a836126b1565b9150611bf2565b6000816001600160401b03811115611c3257611c32612119565b6040519080825280601f01601f191660200182016040528015611c5c576020820181803683370190505b5090505b841561093057611c716001836128bd565b9150611c7e600a866128d0565b611c8990603061287c565b60f81b818381518110611c9e57611c9e612658565b60200101906001600160f81b031916908160001a905350611cc0600a866126b1565b9450611c60565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611cfc9033908990889088906004016128e4565b6020604051808303816000875af1925050508015611d37575060408051601f3d908101601f19168201909252611d3491810190612917565b60015b611d95573d808015611d65576040519150601f19603f3d011682016040523d82523d6000602084013e611d6a565b606091505b508051600003611d8d576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611e1982611603565b9050836001600160a01b031681600001516001600160a01b031614611e505760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611e6e5750611e6e8533610504565b80611e89575033611e7e846106b5565b6001600160a01b0316145b905080611ea957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611ed057604051633a954ecd60e21b815260040160405180910390fd5b611edc60008487611db2565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611fb0576000548214611fb057805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061297883398151915260405160405180910390a4610ca8565b60606001600160a01b0384163b61204f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161057c565b600080856001600160a01b03168560405161206a9190612934565b600060405180830381855af49150503d80600081146120a5576040519150601f19603f3d011682016040523d82523d6000602084013e6120aa565b606091505b50915091506120ba8282866120c4565b9695505050505050565b606083156120d35750816119e0565b8251156120e35782518084602001fd5b8160405162461bcd60e51b815260040161057c919061228b565b80356001600160a01b038116811461211457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261214057600080fd5b81356001600160401b038082111561215a5761215a612119565b604051601f8301601f19908116603f0116810190828211818310171561218257612182612119565b8160405283815286602085880101111561219b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156121ce57600080fd5b6121d7836120fd565b915060208301356001600160401b038111156121f257600080fd5b6121fe8582860161212f565b9150509250929050565b6001600160e01b03198116811461073f57600080fd5b60006020828403121561223057600080fd5b81356119e081612208565b60005b8381101561225657818101518382015260200161223e565b50506000910152565b6000815180845261227781602086016020860161223b565b601f01601f19169290920160200192915050565b6020815260006119e0602083018461225f565b6000602082840312156122b057600080fd5b5035919050565b600080604083850312156122ca57600080fd5b6122d3836120fd565b946020939093013593505050565b6000602082840312156122f357600080fd5b6119e0826120fd565b60008060006060848603121561231157600080fd5b61231a846120fd565b9250612328602085016120fd565b9150604084013590509250925092565b6000806040838503121561234b57600080fd5b50508035926020909101359150565b801515811461073f57600080fd5b60006020828403121561237a57600080fd5b81356119e08161235a565b6000806000806080858703121561239b57600080fd5b6123a4856120fd565b93506020850135925060408501356001600160401b03808211156123c757600080fd5b6123d38883890161212f565b935060608701359150808211156123e957600080fd5b506123f68782880161212f565b91505092959194509250565b60006020828403121561241457600080fd5b81356001600160401b0381111561242a57600080fd5b6109308482850161212f565b60008060006060848603121561244b57600080fd5b83359250612328602085016120fd565b6000806040838503121561246e57600080fd5b612477836120fd565b915060208301356124878161235a565b809150509250929050565b600080602083850312156124a557600080fd5b82356001600160401b03808211156124bc57600080fd5b818501915085601f8301126124d057600080fd5b8135818111156124df57600080fd5b8660208260051b85010111156124f457600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561255b57603f1988860301845261254985835161225f565b9450928501929085019060010161252d565b5092979650505050505050565b6000806000806080858703121561257e57600080fd5b612587856120fd565b9350612595602086016120fd565b92506040850135915060608501356001600160401b038111156125b757600080fd5b6123f68782880161212f565b600080604083850312156125d657600080fd5b6125df836120fd565b91506125ed602084016120fd565b90509250929050565b600181811c9082168061260a57607f821691505b60208210810361262a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761061d5761061d61266e565b634e487b7160e01b600052601260045260246000fd5b6000826126c0576126c061269b565b500490565b6000808335601e198436030181126126dc57600080fd5b8301803591506001600160401b038211156126f657600080fd5b60200191503681900382131561270b57600080fd5b9250929050565b6000600182016127245761272461266e565b5060010190565b6000835161273d81846020880161223b565b83519083019061275181836020880161223b565b01949350505050565b601f82111561070d57600081815260208120601f850160051c810160208610156127815750805b601f850160051c820191505b818110156114e45782815560010161278d565b81516001600160401b038111156127b9576127b9612119565b6127cd816127c784546125f6565b8461275a565b602080601f83116001811461280257600084156127ea5750858301515b600019600386901b1c1916600185901b1785556114e4565b600085815260208120601f198616915b8281101561283157888601518255948401946001909101908401612812565b508582101561284f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561287157600080fd5b81516119e08161235a565b8082018082111561061d5761061d61266e565b6040815260006128a2604083018561225f565b82810360208401526128b4818561225f565b95945050505050565b8181038181111561061d5761061d61266e565b6000826128df576128df61269b565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ba9083018461225f565b60006020828403121561292957600080fd5b81516119e081612208565b6000825161294681846020870161223b565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220eca5e27ba6a0a68397da8a7236b64297dfc05955341eb803c9820d61314cb93364736f6c63430008150033",
    "sourceMap": "1128:8221:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217;;;;;;:::i;:::-;;:::i;:::-;;2317:444;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:46;;1993:22;1975:41;;1963:2;1948:18;2317:444:18;;;;;;;;6131:98:20;;;:::i;:::-;;;;;;;:::i;7617:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3132:32:46;;;3114:51;;3102:2;3087:18;7617:200:20;2968:203:46;6870:208:18;;;;;;:::i;:::-;;:::i;1133:173:33:-;;;;;;:::i;:::-;;:::i;2284:306:20:-;2543:12;;2337:7;2527:13;:28;2284:306;;;3772:25:46;;;3760:2;3745:18;2284:306:20;3626:177:46;7125:208:18;;;;;;:::i;:::-;;:::i;1277:203:27:-;;;;;;:::i;:::-;;:::i;1421:347:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4586:32:46;;;4568:51;;4650:2;4635:18;;4628:34;;;;4541:18;1421:347:34;4394:274:46;243:208:31;;;;;;:::i;:::-;;:::i;5809:104:18:-;5867:7;5893:13;5809:104;;806:142:32;;905:42;806:142;;7384:216:18;;;;;;:::i;:::-;;:::i;5467:87::-;;;;;;:::i;:::-;;:::i;6013:357::-;;;;;;:::i;:::-;;:::i;2008:381:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5473:32:46;;;5455:51;;5554:6;5542:19;;;5537:2;5522:18;;5515:47;5428:18;2008:381:34;5283:285:46;205:31:31;;;;;;;;;530:199:29;;;;;;:::i;:::-;;:::i;3087:256:34:-;;;;;;:::i;:::-;;:::i;5946:123:20:-;;;;;;:::i;:::-;;:::i;980:96:27:-;1054:8;:15;980:96;;3372:203:20;;;;;;:::i;:::-;;:::i;4868:325:18:-;;;;;;:::i;:::-;;:::i;871:86:33:-;944:6;;-1:-1:-1;;;;;944:6:33;871:86;;1003:188:28;;;;;;:::i;:::-;;:::i;6293:102:20:-;;;:::i;4281:288:34:-;;;;;;:::i;:::-;;:::i;6602:227:18:-;;;;;;:::i;:::-;;:::i;698:319:30:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:34:-;2599:16;;-1:-1:-1;;;;;2599:16:34;;;-1:-1:-1;;;2624:10:34;;;;2499:144;;7651:249:18;;;;;;:::i;:::-;;:::i;3175:379::-;;;;;;:::i;:::-;;:::i;565:34:28:-;;;:::i;8232:162:20:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8352:25:20;;;8329:4;8352:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8232:162;4090:217:18;4177:10;:8;:10::i;:::-;4169:46;;;;-1:-1:-1;;;4169:46:18;;9684:2:46;4169:46:18;;;9666:21:46;9723:2;9703:18;;;9696:30;-1:-1:-1;;;9742:18:46;;;9735:53;9805:18;;4169:46:18;;;;;;;;;4225:44;4238:19;5867:7;5893:13;;5809:104;4238:19;4259:9;4225:12;:44::i;:::-;4279:21;4289:3;4294:1;4279:21;;;;;;;;;;;;:9;:21::i;:::-;4090:217;;:::o;2317:444::-;2420:4;-1:-1:-1;;;;;;;;;2455:25:18;;;;:100;;-1:-1:-1;;;;;;;;;;2530:25:18;;;2455:100;:175;;;-1:-1:-1;;;;;;;;;;2605:25:18;;;2455:175;:274;;;-1:-1:-1;;;;;;;2688:41:18;;-1:-1:-1;;;2688:41:18;2455:274;2436:293;2317:444;-1:-1:-1;;2317:444:18:o;6131:98:20:-;6185:13;6217:5;6210:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6131:98;:::o;7617:200::-;7685:7;7709:16;7717:7;7709;:16::i;:::-;7704:64;;7734:34;;-1:-1:-1;;;7734:34:20;;;;;;;;;;;7704:64;-1:-1:-1;7786:24:20;;;;:15;:24;;;;;;-1:-1:-1;;;;;7786:24:20;;7617:200::o;6870:208:18:-;7015:8;1812:30:32;1833:8;1812:20;:30::i;:::-;7039:32:18::1;7053:8;7063:7;7039:13;:32::i;:::-;6870:208:::0;;;:::o;1133:173:33:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:33;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;7125:208:18:-;7273:4;-1:-1:-1;;;;;1639:18:32;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7289:37:18::1;7308:4;7314:2;7318:7;7289:18;:37::i;:::-;7125:208:::0;;;;:::o;1277:203:27:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:27;;10764:2:46;1407:23:27;;;10746:21:46;10803:2;10783:18;;;10776:30;-1:-1:-1;;;10822:18:46;;;10815:43;10875:18;;1407:23:27;10562:337:46;1360:81:27;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:34:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:34;;-1:-1:-1;1613:66:34;;;-1:-1:-1;1755:6:34;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;243:208:31:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:31;;11800:2:46;313:84:31;;;11782:21:46;11839:2;11819:18;;;11812:30;11878:34;11858:18;;;11851:62;-1:-1:-1;;;11929:18:46;;;11922:41;11980:19;;313:84:31;11598:407:46;313:84:31;407:37;431:12;407:23;:37::i;7384:216:18:-;7536:4;-1:-1:-1;;;;;1639:18:32;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7552:41:18::1;7575:4;7581:2;7585:7;7552:22;:41::i;5467:87::-:0;5526:21;5532:8;5542:4;5526:5;:21::i;6013:357::-;6138:24;6178:13;6194:17;6202:8;6194:7;:17::i;:::-;6178:33;;6257:5;-1:-1:-1;;;;;6244:18:18;:9;-1:-1:-1;;;;;6244:18:18;;:68;;;-1:-1:-1;;;;;;8352:25:20;;;8329:4;8352:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6278:34:18;6244:118;;;;6353:9;-1:-1:-1;;;;;6328:34:18;:21;6340:8;6328:11;:21::i;:::-;-1:-1:-1;;;;;6328:34:18;;6244:118;6221:142;6013:357;-1:-1:-1;;;;6013:357:18:o;2008:381:34:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:34;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:34;;;-1:-1:-1;;;2295:10:34;;;;2211:171;2192:190;;;;;2008:381;;;:::o;530:199:29:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:29;;12212:2:46;601:81:29;;;12194:21:46;12251:2;12231:18;;;12224:30;12290:34;12270:18;;;12263:62;-1:-1:-1;;;12341:18:46;;;12334:38;12389:19;;601:81:29;12010:404:46;601:81:29;692:30;702:13;717:4;692:9;:30::i;3087:256:34:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:34;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;5946:123:20:-;6010:7;6036:21;6049:7;6036:12;:21::i;:::-;:26;;5946:123;-1:-1:-1;;5946:123:20:o;3372:203::-;3436:7;-1:-1:-1;;;;;3459:19:20;;3455:60;;3487:28;;-1:-1:-1;;;3487:28:20;;;;;;;;;;;3455:60;-1:-1:-1;;;;;;3540:19:20;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3540:27:20;;3372:203::o;4868:325:18:-;5036:10;:8;:10::i;:::-;5028:46;;;;-1:-1:-1;;;5028:46:18;;9684:2:46;5028:46:18;;;9666:21:46;9723:2;9703:18;;;9696:30;-1:-1:-1;;;9742:18:46;;;9735:53;9805:18;;5028:46:18;9482:347:46;5028:46:18;5084:60;5103:19;5867:7;5893:13;;5809:104;5103:19;5124:9;5135:8;5084:18;:60::i;:::-;;;5154:32;5164:3;5169:9;5180:5;5154:9;:32::i;1003:188:28:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:28;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6293:102:20:-;6349:13;6381:7;6374:14;;;;;:::i;4281:288:34:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:34;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;6602:227:18:-;6755:8;1812:30:32;1833:8;1812:20;:30::i;:::-;6779:43:18::1;6803:8;6813;6779:23;:43::i;698:319:30:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:30;;-1:-1:-1;;;922:54:30:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;7651:249:18:-;7830:4;-1:-1:-1;;;;;1639:18:32;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7846:47:18::1;7869:4;7875:2;7879:7;7888:4;7846:22;:47::i;:::-;7651:249:::0;;;;;:::o;3175:379::-;3274:29;3306:17;;;:7;:17;;;;;3274:49;;3249:13;;3274:29;3306:17;3274:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:1;3343:15;3337:29;:33;3333:86;;;3393:15;3175:379;-1:-1:-1;;3175:379:18:o;3333:86::-;3429:22;3454:21;3466:8;3454:11;:21::i;:::-;3429:46;;3516:8;3526:19;:8;:17;:19::i;:::-;3499:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3485:62;;;;3175:379;;;:::o;565:34:28:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8611:102:18:-;8662:4;8699:7;944:6:33;;-1:-1:-1;;;;;944:6:33;;871:86;8699:7:18;-1:-1:-1;;;;;8685:21:18;:10;-1:-1:-1;;;;;8685:21:18;;8678:28;;8611:102;:::o;8103:202::-;8209:17;;;;:7;:17;;;;;8203:31;;;;;:::i;:::-;:36;;-1:-1:-1;8195:64:18;;;;-1:-1:-1;;;8195:64:18;;13788:2:46;8195:64:18;;;13770:21:46;13827:2;13807:18;;;13800:30;-1:-1:-1;;;13846:18:46;;;13839:45;13901:18;;8195:64:18;13586:339:46;8195:64:18;8269:17;;;;:7;:17;;;;;:29;8289:9;8269:17;:29;:::i;10271:1708:20:-;10389:20;10412:13;-1:-1:-1;;;;;10439:16:20;;10435:48;;10464:19;;-1:-1:-1;;;10464:19:20;;;;;;;;;;;10435:48;10497:8;10509:1;10497:13;10493:44;;10519:18;;-1:-1:-1;;;10519:18:20;;;;;;;;;;;10493:44;-1:-1:-1;;;;;10880:16:20;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;10938:49:20;;-1:-1:-1;;;;;10880:44:20;;;;;;;10938:49;;;;-1:-1:-1;;10880:44:20;;;;;;10938:49;;;;;;;;;;;;;;;;11002:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11051:66:20;;;-1:-1:-1;;;11101:15:20;11051:66;;;;;;;;;;;;;11002:25;;11195:23;;;;1427:19:41;:23;11233:618:20;;11272:308;11302:38;;11327:12;;-1:-1:-1;;;;;11302:38:20;;;11319:1;;-1:-1:-1;;;;;;;;;;;11302:38:20;11319:1;;11302:38;11367:69;11406:1;11410:2;11414:14;;;;;;11430:5;11367:30;:69::i;:::-;11362:172;;11471:40;;-1:-1:-1;;;11471:40:20;;;;;;;;;;;11362:172;11575:3;11560:12;:18;11272:308;;11659:12;11642:13;;:29;11638:43;;11673:8;;;11638:43;11233:618;;;11720:117;11750:40;;11775:14;;;;;-1:-1:-1;;;;;11750:40:20;;;11767:1;;-1:-1:-1;;;;;;;;;;;11750:40:20;11767:1;;11750:40;11832:3;11817:12;:18;11720:117;;11233:618;-1:-1:-1;11864:13:20;:28;;;11912:60;;11945:2;11949:12;11963:8;11912:60;:::i;9558:172::-;9615:4;9678:13;;9668:7;:23;9638:85;;;;-1:-1:-1;;9696:20:20;;;;:11;:20;;;;;:27;-1:-1:-1;;;9696:27:20;;;;9695:28;;9558:172::o;1866:477:32:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:32;;2219:4;2168:67;;;16346:34:46;-1:-1:-1;;;;;16416:15:46;;16396:18;;;16389:43;905:42:32;;2168;;16281:18:46;;2168:67:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2266:28;;-1:-1:-1;;;2266:28:32;;-1:-1:-1;;;;;3132:32:46;;2266:28:32;;;3114:51:46;3087:18;;2266:28:32;2968:203:46;7164:392:20;7244:13;7260:24;7276:7;7260:15;:24::i;:::-;7244:40;;7304:5;-1:-1:-1;;;;;7298:11:20;:2;-1:-1:-1;;;;;7298:11:20;;7294:48;;7318:24;;-1:-1:-1;;;7318:24:20;;;;;;;;;;;7294:48;719:10:43;-1:-1:-1;;;;;7357:21:20;;;7353:158;;7397:37;7414:5;719:10:43;8232:162:20;:::i;7397:37::-;7392:119;;7461:35;;-1:-1:-1;;;7461:35:20;;;;;;;;;;;7392:119;7521:28;7530:2;7534:7;7543:5;7521:8;:28::i;1421:172:33:-;1501:6;;;-1:-1:-1;;;;;1517:18:33;;;-1:-1:-1;;;;;;1517:18:33;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;8456:164:20:-;8585:28;8595:4;8601:2;8605:7;8585:9;:28::i;457:160:31:-;528:19;:34;;-1:-1:-1;;528:34:31;;;;;;;;;;577:33;;1975:41:46;;;577:33:31;;1963:2:46;1948:18;577:33:31;;;;;;;457:160;:::o;8686:179:20:-;8819:39;8836:4;8842:2;8846:7;8819:39;;;;;;;;;;;;:16;:39::i;16073:2355::-;16152:35;16190:21;16203:7;16190:12;:21::i;:::-;16237:18;;16152:59;;-1:-1:-1;16266:284:20;;;;16299:22;719:10:43;-1:-1:-1;;;;;16325:20:20;;;;:76;;-1:-1:-1;16365:36:20;16382:4;719:10:43;8232:162:20;:::i;16365:36::-;16325:132;;;-1:-1:-1;719:10:43;16421:20:20;16433:7;16421:11;:20::i;:::-;-1:-1:-1;;;;;16421:36:20;;16325:132;16299:159;;16478:17;16473:66;;16504:35;;-1:-1:-1;;;16504:35:20;;;;;;;;;;;16473:66;16285:265;16266:284;16673:35;16690:1;16694:7;16703:4;16673:8;:35::i;:::-;-1:-1:-1;;;;;17032:18:20;;;16998:31;17032:18;;;:12;:18;;;;;;;;17064:24;;-1:-1:-1;;;;;;;;;;17064:24:20;;;;;;;;;-1:-1:-1;;17064:24:20;;;;17102:29;;;;;17087:1;17102:29;;;;;;;;-1:-1:-1;;17102:29:20;;;;;;;;;;17261:20;;;:11;:20;;;;;;17295;;-1:-1:-1;;;;17362:15:20;17329:49;;;-1:-1:-1;;;17329:49:20;-1:-1:-1;;;;;;17329:49:20;;;;;;;;;;17392:22;-1:-1:-1;;;17392:22:20;;;17680:11;;;17739:24;;;;;17781:13;;17032:18;;17739:24;;17781:13;17777:377;;17988:13;;17973:11;:28;17969:171;;18025:20;;18093:28;;;;-1:-1:-1;;;;;18067:54:20;-1:-1:-1;;;18067:54:20;-1:-1:-1;;;;;;18067:54:20;;;-1:-1:-1;;;;;18025:20:20;;18067:54;;;;17969:171;-1:-1:-1;;18179:35:20;;18206:7;;-1:-1:-1;18202:1:20;;-1:-1:-1;;;;;;18179:35:20;;;-1:-1:-1;;;;;;;;;;;18179:35:20;18202:1;;18179:35;-1:-1:-1;;18397:12:20;:14;;;;;;-1:-1:-1;;16073:2355:20:o;2349:783:32:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:32;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:32;;2817:4;2763:92;;;16346:34:46;-1:-1:-1;;;;;16416:15:46;;16396:18;;;16389:43;905:42:32;;2763:45;;16281:18:46;;2763:92:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217:18;;:::o;2726:289:32:-;2902:94;;-1:-1:-1;;;2902:94:32;;2958:4;2902:94;;;16346:34:46;-1:-1:-1;;;;;16416:15:46;;16396:18;;;16389:43;905:42:32;;2902:47;;16281:18:46;;2902:94:32;16134:304:46;2603:513:32;3053:48;;-1:-1:-1;;;3053:48:32;;3095:4;3053:48;;;3114:51:46;905:42:32;;3053:33;;3087:18:46;;3053:48:32;2968:203:46;3430:334:34;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:34;;16895:2:46;3571:25:34;;;16877:21:46;16934:2;16914:18;;;16907:30;-1:-1:-1;;;16953:18:46;;;16946:45;17008:18;;3571:25:34;16693:339:46;3531:76:34;3617:16;:36;;-1:-1:-1;;;;;3617:36:34;;-1:-1:-1;;;;;;3663:32:34;;;;;-1:-1:-1;;;3663:32:34;;;;;;;;3711:46;;3772:25:46;;;3711:46:34;;3760:2:46;3745:18;3711:46:34;;;;;;;3430:334;;:::o;4715:1174:20:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4825:7:20;4923:13;;4916:4;:20;4912:913;;;4960:31;4994:17;;;:11;:17;;;;;;;;;4960:51;;;;;;;;;-1:-1:-1;;;;;4960:51:20;;;;-1:-1:-1;;;4960:51:20;;-1:-1:-1;;;;;4960:51:20;;;;;;;;-1:-1:-1;;;4960:51:20;;;;;;;;;;;;;;5033:774;;5086:14;;-1:-1:-1;;;;;5086:28:20;;5082:107;;5153:9;4715:1174;-1:-1:-1;;;4715:1174:20:o;5082:107::-;-1:-1:-1;;;5549:6:20;5597:17;;;;:11;:17;;;;;;;;;5585:29;;;;;;;;;-1:-1:-1;;;;;5585:29:20;;;;;-1:-1:-1;;;5585:29:20;;-1:-1:-1;;;;;5585:29:20;;;;;;;;-1:-1:-1;;;5585:29:20;;;;;;;;;;;;;5648:28;5644:115;;5719:9;4715:1174;-1:-1:-1;;;4715:1174:20:o;5644:115::-;5506:279;;;4938:887;4912:913;5851:31;;-1:-1:-1;;;5851:31:20;;;;;;;;;;;2840:362:27;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:27;;;:7;3126:22;3159:16;;;;3044:34;;-1:-1:-1;3044:34:27;;-1:-1:-1;3159:36:27;3178:17;3159:16;:36;:::i;:::-;;2840:362;;;;;;:::o;1273:185:28:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:34:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:34;;16895:2:46;4840:25:34;;;16877:21:46;16934:2;16914:18;;;16907:30;-1:-1:-1;;;16953:18:46;;;16946:45;17008:18;;4840:25:34;16693:339:46;4807:69:34;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:34;;;;;;;;;;;;;-1:-1:-1;4886:29:34;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:34;;;;;;;;;;;-1:-1:-1;4886:81:34;;;;;;;4983:43;;3772:25:46;;;4918:49:34;;4886:29;;4983:43;;3745:18:46;4983:43:34;;;;;;;4671:362;;;:::o;7884:282:20:-;719:10:43;-1:-1:-1;;;;;7982:24:20;;;7978:54;;8015:17;;-1:-1:-1;;;8015:17:20;;;;;;;;;;;7978:54;719:10:43;8043:32:20;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8043:42:20;;;;;;;;;;;;:53;;-1:-1:-1;;8043:53:20;;;;;;;;;;8111:48;;1975:41:46;;;8043:42:20;;719:10:43;8111:48:20;;1948:18:46;8111:48:20;;;;;;;7884:282;;:::o;6538:198:41:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:41:o;8931:381:20:-;9092:28;9102:4;9108:2;9112:7;9092:9;:28::i;:::-;-1:-1:-1;;;;;9134:13:20;;1427:19:41;:23;9130:176:20;;9168:56;9199:4;9205:2;9209:7;9218:5;9168:30;:56::i;:::-;9163:143;;9251:40;;-1:-1:-1;;;9251:40:20;;;;;;;;;;;2153:390:27;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:27;;-1:-1:-1;;;2511:25:27;;17757:2:46;2511:25:27;;;17739:21:46;17796:2;17776:18;;;17769:30;-1:-1:-1;;;17815:18:46;;;17808:45;17870:18;;2511:25:27;17555:339:46;305:703:42;361:13;578:5;587:1;578:10;574:51;;-1:-1:-1;;604:10:42;;;;;;;;;;;;-1:-1:-1;;;604:10:42;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:42;;-1:-1:-1;750:2:42;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:42;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:42;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:42;;;;;;;;-1:-1:-1;949:11:42;958:2;949:11;;:::i;:::-;;;821:150;;19209:650:20;19387:72;;-1:-1:-1;;;19387:72:20;;19367:4;;-1:-1:-1;;;;;19387:36:20;;;;;:72;;719:10:43;;19438:4:20;;19444:7;;19453:5;;19387:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19387:72:20;;;;;;;;-1:-1:-1;;19387:72:20;;;;;;;;;;;;:::i;:::-;;;19383:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19618:6;:13;19635:1;19618:18;19614:229;;19663:40;;-1:-1:-1;;;19663:40:20;;;;;;;;;;;19614:229;19803:6;19797:13;19788:6;19784:2;19780:15;19773:38;19383:470;-1:-1:-1;;;;;;19505:55:20;-1:-1:-1;;;19505:55:20;;-1:-1:-1;19209:650:20;;;;;;:::o;18539:189::-;18649:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18649:29:20;-1:-1:-1;;;;;18649:29:20;;;;;;;;;18693:28;;18649:24;;18693:28;;;;;;;18539:189;;;:::o;13614:2082::-;13724:35;13762:21;13775:7;13762:12;:21::i;:::-;13724:59;;13820:4;-1:-1:-1;;;;;13798:26:20;:13;:18;;;-1:-1:-1;;;;;13798:26:20;;13794:67;;13833:28;;-1:-1:-1;;;13833:28:20;;;;;;;;;;;13794:67;13872:22;719:10:43;-1:-1:-1;;;;;13898:20:20;;;;:72;;-1:-1:-1;13934:36:20;13951:4;719:10:43;8232:162:20;:::i;13934:36::-;13898:124;;;-1:-1:-1;719:10:43;13986:20:20;13998:7;13986:11;:20::i;:::-;-1:-1:-1;;;;;13986:36:20;;13898:124;13872:151;;14039:17;14034:66;;14065:35;;-1:-1:-1;;;14065:35:20;;;;;;;;;;;14034:66;-1:-1:-1;;;;;14114:16:20;;14110:52;;14139:23;;-1:-1:-1;;;14139:23:20;;;;;;;;;;;14110:52;14278:35;14295:1;14299:7;14308:4;14278:8;:35::i;:::-;-1:-1:-1;;;;;14603:18:20;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;14603:31:20;;;-1:-1:-1;;;;;14603:31:20;;;-1:-1:-1;;14603:31:20;;;;;;;14648:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14648:29:20;;;;;;;;;;;14726:20;;;:11;:20;;;;;;14760:18;;-1:-1:-1;;;;;;14792:49:20;;;;-1:-1:-1;;;14825:15:20;14792:49;;;;;;;;;;15111:11;;15170:24;;;;;15212:13;;14726:20;;15170:24;;15212:13;15208:377;;15419:13;;15404:11;:28;15400:171;;15456:20;;15524:28;;;;-1:-1:-1;;;;;15498:54:20;-1:-1:-1;;;15498:54:20;-1:-1:-1;;;;;;15498:54:20;;;-1:-1:-1;;;;;15456:20:20;;15498:54;;;;15400:171;14579:1016;;;15629:7;15625:2;-1:-1:-1;;;;;15610:27:20;15619:4;-1:-1:-1;;;;;15610:27:20;-1:-1:-1;;;;;;;;;;;15610:27:20;;;;;;;;;15647:42;7125:208:18;6922:387:41;7063:12;-1:-1:-1;;;;;1427:19:41;;;7087:69;;;;-1:-1:-1;;;7087:69:41;;19099:2:46;7087:69:41;;;19081:21:46;19138:2;19118:18;;;19111:30;19177:34;19157:18;;;19150:62;-1:-1:-1;;;19228:18:46;;;19221:36;19274:19;;7087:69:41;18897:402:46;7087:69:41;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:41;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:41:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:41;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:41;;;;;;;;:::i;14:173:46:-;82:20;;-1:-1:-1;;;;;131:31:46;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;-1:-1:-1;;;;;537:2:46;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:46;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:396::-;1126:6;1134;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1306:2;1295:9;1291:18;1278:32;-1:-1:-1;;;;;1325:6:46;1322:30;1319:50;;;1365:1;1362;1355:12;1319:50;1388;1430:7;1421:6;1410:9;1406:22;1388:50;:::i;:::-;1378:60;;;1048:396;;;;;:::o;1449:131::-;-1:-1:-1;;;;;;1523:32:46;;1513:43;;1503:71;;1570:1;1567;1560:12;1585:245;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1751:9;1738:23;1770:30;1794:5;1770:30;:::i;2027:250::-;2112:1;2122:113;2136:6;2133:1;2130:13;2122:113;;;2212:11;;;2206:18;2193:11;;;2186:39;2158:2;2151:10;2122:113;;;-1:-1:-1;;2269:1:46;2251:16;;2244:27;2027:250::o;2282:271::-;2324:3;2362:5;2356:12;2389:6;2384:3;2377:19;2405:76;2474:6;2467:4;2462:3;2458:14;2451:4;2444:5;2440:16;2405:76;:::i;:::-;2535:2;2514:15;-1:-1:-1;;2510:29:46;2501:39;;;;2542:4;2497:50;;2282:271;-1:-1:-1;;2282:271:46:o;2558:220::-;2707:2;2696:9;2689:21;2670:4;2727:45;2768:2;2757:9;2753:18;2745:6;2727:45;:::i;2783:180::-;2842:6;2895:2;2883:9;2874:7;2870:23;2866:32;2863:52;;;2911:1;2908;2901:12;2863:52;-1:-1:-1;2934:23:46;;2783:180;-1:-1:-1;2783:180:46:o;3176:254::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3344:29;3363:9;3344:29;:::i;:::-;3334:39;3420:2;3405:18;;;;3392:32;;-1:-1:-1;;;3176:254:46:o;3435:186::-;3494:6;3547:2;3535:9;3526:7;3522:23;3518:32;3515:52;;;3563:1;3560;3553:12;3515:52;3586:29;3605:9;3586:29;:::i;3808:328::-;3885:6;3893;3901;3954:2;3942:9;3933:7;3929:23;3925:32;3922:52;;;3970:1;3967;3960:12;3922:52;3993:29;4012:9;3993:29;:::i;:::-;3983:39;;4041:38;4075:2;4064:9;4060:18;4041:38;:::i;:::-;4031:48;;4126:2;4115:9;4111:18;4098:32;4088:42;;3808:328;;;;;:::o;4141:248::-;4209:6;4217;4270:2;4258:9;4249:7;4245:23;4241:32;4238:52;;;4286:1;4283;4276:12;4238:52;-1:-1:-1;;4309:23:46;;;4379:2;4364:18;;;4351:32;;-1:-1:-1;4141:248:46:o;4673:118::-;4759:5;4752:13;4745:21;4738:5;4735:32;4725:60;;4781:1;4778;4771:12;4796:241;4852:6;4905:2;4893:9;4884:7;4880:23;4876:32;4873:52;;;4921:1;4918;4911:12;4873:52;4960:9;4947:23;4979:28;5001:5;4979:28;:::i;5573:685::-;5678:6;5686;5694;5702;5755:3;5743:9;5734:7;5730:23;5726:33;5723:53;;;5772:1;5769;5762:12;5723:53;5795:29;5814:9;5795:29;:::i;:::-;5785:39;;5871:2;5860:9;5856:18;5843:32;5833:42;;5926:2;5915:9;5911:18;5898:32;-1:-1:-1;;;;;5990:2:46;5982:6;5979:14;5976:34;;;6006:1;6003;5996:12;5976:34;6029:50;6071:7;6062:6;6051:9;6047:22;6029:50;:::i;:::-;6019:60;;6132:2;6121:9;6117:18;6104:32;6088:48;;6161:2;6151:8;6148:16;6145:36;;;6177:1;6174;6167:12;6145:36;;6200:52;6244:7;6233:8;6222:9;6218:24;6200:52;:::i;:::-;6190:62;;;5573:685;;;;;;;:::o;6263:322::-;6332:6;6385:2;6373:9;6364:7;6360:23;6356:32;6353:52;;;6401:1;6398;6391:12;6353:52;6441:9;6428:23;-1:-1:-1;;;;;6466:6:46;6463:30;6460:50;;;6506:1;6503;6496:12;6460:50;6529;6571:7;6562:6;6551:9;6547:22;6529:50;:::i;6590:322::-;6667:6;6675;6683;6736:2;6724:9;6715:7;6711:23;6707:32;6704:52;;;6752:1;6749;6742:12;6704:52;6788:9;6775:23;6765:33;;6817:38;6851:2;6840:9;6836:18;6817:38;:::i;6917:315::-;6982:6;6990;7043:2;7031:9;7022:7;7018:23;7014:32;7011:52;;;7059:1;7056;7049:12;7011:52;7082:29;7101:9;7082:29;:::i;:::-;7072:39;;7161:2;7150:9;7146:18;7133:32;7174:28;7196:5;7174:28;:::i;:::-;7221:5;7211:15;;;6917:315;;;;;:::o;7237:626::-;7334:6;7342;7395:2;7383:9;7374:7;7370:23;7366:32;7363:52;;;7411:1;7408;7401:12;7363:52;7451:9;7438:23;-1:-1:-1;;;;;7521:2:46;7513:6;7510:14;7507:34;;;7537:1;7534;7527:12;7507:34;7575:6;7564:9;7560:22;7550:32;;7620:7;7613:4;7609:2;7605:13;7601:27;7591:55;;7642:1;7639;7632:12;7591:55;7682:2;7669:16;7708:2;7700:6;7697:14;7694:34;;;7724:1;7721;7714:12;7694:34;7777:7;7772:2;7762:6;7759:1;7755:14;7751:2;7747:23;7743:32;7740:45;7737:65;;;7798:1;7795;7788:12;7737:65;7829:2;7821:11;;;;;7851:6;;-1:-1:-1;7237:626:46;;-1:-1:-1;;;;7237:626:46:o;7868:801::-;8028:4;8057:2;8097;8086:9;8082:18;8127:2;8116:9;8109:21;8150:6;8185;8179:13;8216:6;8208;8201:22;8254:2;8243:9;8239:18;8232:25;;8316:2;8306:6;8303:1;8299:14;8288:9;8284:30;8280:39;8266:53;;8354:2;8346:6;8342:15;8375:1;8385:255;8399:6;8396:1;8393:13;8385:255;;;8492:2;8488:7;8476:9;8468:6;8464:22;8460:36;8455:3;8448:49;8520:40;8553:6;8544;8538:13;8520:40;:::i;:::-;8510:50;-1:-1:-1;8618:12:46;;;;8583:15;;;;8421:1;8414:9;8385:255;;;-1:-1:-1;8657:6:46;;7868:801;-1:-1:-1;;;;;;;7868:801:46:o;8674:538::-;8769:6;8777;8785;8793;8846:3;8834:9;8825:7;8821:23;8817:33;8814:53;;;8863:1;8860;8853:12;8814:53;8886:29;8905:9;8886:29;:::i;:::-;8876:39;;8934:38;8968:2;8957:9;8953:18;8934:38;:::i;:::-;8924:48;;9019:2;9008:9;9004:18;8991:32;8981:42;;9074:2;9063:9;9059:18;9046:32;-1:-1:-1;;;;;9093:6:46;9090:30;9087:50;;;9133:1;9130;9123:12;9087:50;9156;9198:7;9189:6;9178:9;9174:22;9156:50;:::i;9217:260::-;9285:6;9293;9346:2;9334:9;9325:7;9321:23;9317:32;9314:52;;;9362:1;9359;9352:12;9314:52;9385:29;9404:9;9385:29;:::i;:::-;9375:39;;9433:38;9467:2;9456:9;9452:18;9433:38;:::i;:::-;9423:48;;9217:260;;;;;:::o;9834:380::-;9913:1;9909:12;;;;9956;;;9977:61;;10031:4;10023:6;10019:17;10009:27;;9977:61;10084:2;10076:6;10073:14;10053:18;10050:38;10047:161;;10130:10;10125:3;10121:20;10118:1;10111:31;10165:4;10162:1;10155:15;10193:4;10190:1;10183:15;10047:161;;9834:380;;;:::o;10219:338::-;10421:2;10403:21;;;10460:2;10440:18;;;10433:30;-1:-1:-1;;;10494:2:46;10479:18;;10472:44;10548:2;10533:18;;10219:338::o;10904:127::-;10965:10;10960:3;10956:20;10953:1;10946:31;10996:4;10993:1;10986:15;11020:4;11017:1;11010:15;11036:127;11097:10;11092:3;11088:20;11085:1;11078:31;11128:4;11125:1;11118:15;11152:4;11149:1;11142:15;11168:168;11241:9;;;11272;;11289:15;;;11283:22;;11269:37;11259:71;;11310:18;;:::i;11341:127::-;11402:10;11397:3;11393:20;11390:1;11383:31;11433:4;11430:1;11423:15;11457:4;11454:1;11447:15;11473:120;11513:1;11539;11529:35;;11544:18;;:::i;:::-;-1:-1:-1;11578:9:46;;11473:120::o;12419:521::-;12496:4;12502:6;12562:11;12549:25;12656:2;12652:7;12641:8;12625:14;12621:29;12617:43;12597:18;12593:68;12583:96;;12675:1;12672;12665:12;12583:96;12702:33;;12754:20;;;-1:-1:-1;;;;;;12786:30:46;;12783:50;;;12829:1;12826;12819:12;12783:50;12862:4;12850:17;;-1:-1:-1;12893:14:46;12889:27;;;12879:38;;12876:58;;;12930:1;12927;12920:12;12876:58;12419:521;;;;;:::o;12945:135::-;12984:3;13005:17;;;13002:43;;13025:18;;:::i;:::-;-1:-1:-1;13072:1:46;13061:13;;12945:135::o;13085:496::-;13264:3;13302:6;13296:13;13318:66;13377:6;13372:3;13365:4;13357:6;13353:17;13318:66;:::i;:::-;13447:13;;13406:16;;;;13469:70;13447:13;13406:16;13516:4;13504:17;;13469:70;:::i;:::-;13555:20;;13085:496;-1:-1:-1;;;;13085:496:46:o;14056:545::-;14158:2;14153:3;14150:11;14147:448;;;14194:1;14219:5;14215:2;14208:17;14264:4;14260:2;14250:19;14334:2;14322:10;14318:19;14315:1;14311:27;14305:4;14301:38;14370:4;14358:10;14355:20;14352:47;;;-1:-1:-1;14393:4:46;14352:47;14448:2;14443:3;14439:12;14436:1;14432:20;14426:4;14422:31;14412:41;;14503:82;14521:2;14514:5;14511:13;14503:82;;;14566:17;;;14547:1;14536:13;14503:82;;14777:1352;14903:3;14897:10;-1:-1:-1;;;;;14922:6:46;14919:30;14916:56;;;14952:18;;:::i;:::-;14981:97;15071:6;15031:38;15063:4;15057:11;15031:38;:::i;:::-;15025:4;14981:97;:::i;:::-;15133:4;;15197:2;15186:14;;15214:1;15209:663;;;;15916:1;15933:6;15930:89;;;-1:-1:-1;15985:19:46;;;15979:26;15930:89;-1:-1:-1;;14734:1:46;14730:11;;;14726:24;14722:29;14712:40;14758:1;14754:11;;;14709:57;16032:81;;15179:944;;15209:663;14003:1;13996:14;;;14040:4;14027:18;;-1:-1:-1;;15245:20:46;;;15363:236;15377:7;15374:1;15371:14;15363:236;;;15466:19;;;15460:26;15445:42;;15558:27;;;;15526:1;15514:14;;;;15393:19;;15363:236;;;15367:3;15627:6;15618:7;15615:19;15612:201;;;15688:19;;;15682:26;-1:-1:-1;;15771:1:46;15767:14;;;15783:3;15763:24;15759:37;15755:42;15740:58;15725:74;;15612:201;-1:-1:-1;;;;;15859:1:46;15843:14;;;15839:22;15826:36;;-1:-1:-1;14777:1352:46:o;16443:245::-;16510:6;16563:2;16551:9;16542:7;16538:23;16534:32;16531:52;;;16579:1;16576;16569:12;16531:52;16611:9;16605:16;16630:28;16652:5;16630:28;:::i;17037:125::-;17102:9;;;17123:10;;;17120:36;;;17136:18;;:::i;17167:383::-;17364:2;17353:9;17346:21;17327:4;17390:45;17431:2;17420:9;17416:18;17408:6;17390:45;:::i;:::-;17483:9;17475:6;17471:22;17466:2;17455:9;17451:18;17444:50;17511:33;17537:6;17529;17511:33;:::i;:::-;17503:41;17167:383;-1:-1:-1;;;;;17167:383:46:o;17899:128::-;17966:9;;;17987:11;;;17984:37;;;18001:18;;:::i;18032:112::-;18064:1;18090;18080:35;;18095:18;;:::i;:::-;-1:-1:-1;18129:9:46;;18032:112::o;18149:489::-;-1:-1:-1;;;;;18418:15:46;;;18400:34;;18470:15;;18465:2;18450:18;;18443:43;18517:2;18502:18;;18495:34;;;18565:3;18560:2;18545:18;;18538:31;;;18343:4;;18586:46;;18612:19;;18604:6;18586:46;:::i;18643:249::-;18712:6;18765:2;18753:9;18744:7;18740:23;18736:32;18733:52;;;18781:1;18778;18771:12;18733:52;18813:9;18807:16;18832:30;18856:5;18832:30;:::i;19304:287::-;19433:3;19471:6;19465:13;19487:66;19546:6;19541:3;19534:4;19526:6;19522:17;19487:66;:::i;:::-;19569:16;;;;;19304:287;-1:-1:-1;;19304:287:46:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchMintTo(address,uint256,string,bytes)": "754a81d9",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "mintTo(address,string)": "0075a317",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchMintTo(address,uint256,string,bytes)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_data\":\"Additional data to pass along during the minting of the NFT.\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchMintTo(address,uint256,string,bytes)\":{\"notice\":\"Lets an authorized address mint multiple NFTs at once to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"}},\"notice\":\"The `ERC721Base` smart contract implements the ERC721 NFT standard, along with the ERC721A optimization to the standard.  It includes the following additions to standard ERC721 logic:      - Ability to mint NFTs via the provided `mint` function.      - Contract metadata for royalty support on platforms such as OpenSea that use        off-chain information to distribute roaylties.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - EIP 2981 compliance for royalty support on NFT marketplaces.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol\":\"ERC721Base\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol\":{\"keccak256\":\"0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7\",\"dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX\"]},\"node_modules/@thirdweb-dev/contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"node_modules/@thirdweb-dev/contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea\",\"dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"node_modules/@thirdweb-dev/contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"node_modules/@thirdweb-dev/contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"node_modules/@thirdweb-dev/contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchMintTo(address,uint256,string,bytes)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_data": "Additional data to pass along during the minting of the NFT.",
              "_quantity": "The number of NFTs to mint.",
              "_to": "The recipient of the NFT to mint."
            }
          },
          "burn(uint256)": {
            "details": "ERC721A's `_burn(uint256,bool)` internally checks for token approvals.",
            "params": {
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintTo(address,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_to": "The recipient of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFT minted."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See `BatchMintMetadata` for handling of metadata in this contract.",
            "params": {
              "_tokenId": "The tokenId of an NFT."
            }
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchMintTo(address,uint256,string,bytes)": {
            "notice": "Lets an authorized address mint multiple NFTs at once to a recipient."
          },
          "burn(uint256)": {
            "notice": "Lets an owner or approved operator burn the NFT of the given tokenId."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "mintTo(address,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the metadata URI for an NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@thirdweb-dev/=node_modules/@thirdweb-dev/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol": "ERC721Base"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol": {
        "keccak256": "0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3",
        "urls": [
          "bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7",
          "dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10",
        "urls": [
          "bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea",
          "dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol",
    "id": 43348,
    "exportedSymbols": {
      "BatchMintMetadata": [
        45211
      ],
      "ContractMetadata": [
        45269
      ],
      "DefaultOperatorFilterer": [
        45308
      ],
      "ERC721A": [
        44744
      ],
      "ERC721Base": [
        43347
      ],
      "IContractMetadata": [
        45908
      ],
      "IERC165": [
        44756
      ],
      "IERC2981": [
        44775
      ],
      "IMulticall": [
        45922
      ],
      "IOwnable": [
        46158
      ],
      "IRoyalty": [
        46222
      ],
      "Multicall": [
        45367
      ],
      "OperatorFilterer": [
        45564
      ],
      "Ownable": [
        45646
      ],
      "Royalty": [
        45885
      ],
      "TWAddress": [
        46517
      ],
      "TWStrings": [
        46720
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9311:18",
    "nodes": [
      {
        "id": 42881,
        "nodeType": "PragmaDirective",
        "src": "39:23:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 42883,
        "nodeType": "ImportDirective",
        "src": "86:59:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/eip/ERC721AVirtualApprove.sol",
        "file": "../eip/ERC721AVirtualApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 44745,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42882,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44744,
              "src": "95:7:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42884,
        "nodeType": "ImportDirective",
        "src": "147:43:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45270,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42885,
        "nodeType": "ImportDirective",
        "src": "191:36:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45368,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42886,
        "nodeType": "ImportDirective",
        "src": "228:34:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42887,
        "nodeType": "ImportDirective",
        "src": "263:34:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45886,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42888,
        "nodeType": "ImportDirective",
        "src": "298:44:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol",
        "file": "../extension/BatchMintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45212,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42889,
        "nodeType": "ImportDirective",
        "src": "343:50:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol",
        "file": "../extension/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 45309,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42890,
        "nodeType": "ImportDirective",
        "src": "395:30:18",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol",
        "file": "../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43348,
        "sourceUnit": 46721,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43347,
        "nodeType": "ContractDefinition",
        "src": "1128:8221:18",
        "nodes": [
          {
            "id": 42908,
            "nodeType": "UsingForDirective",
            "src": "1284:28:18",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42906,
              "name": "TWStrings",
              "nameLocations": [
                "1290:9:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46720,
              "src": "1290:9:18"
            },
            "typeName": {
              "id": 42907,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 42912,
            "nodeType": "VariableDeclaration",
            "src": "1494:42:18",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fullURI",
            "nameLocation": "1529:7:18",
            "scope": 43347,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 42911,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42909,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1502:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1494:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 42910,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1513:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 42943,
            "nodeType": "FunctionDefinition",
            "src": "1722:345:18",
            "nodes": [],
            "body": {
              "id": 42942,
              "nodeType": "Block",
              "src": "1919:148:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42930,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42914,
                        "src": "1941:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42929,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45639,
                      "src": "1929:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42932,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:26:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42934,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42920,
                        "src": "1990:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42935,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42922,
                        "src": "2009:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 42933,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45816,
                      "src": "1965:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 42936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42937,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:56:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 42939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2055:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42938,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45404,
                      "src": "2031:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 42940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42941,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:29:18"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42925,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42916,
                    "src": "1903:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 42926,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42918,
                    "src": "1910:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 42927,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42924,
                  "name": "ERC721A",
                  "nameLocations": [
                    "1895:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "1895:7:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1895:23:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42914,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1751:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42943,
                  "src": "1743:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42916,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1788:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42943,
                  "src": "1774:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42915,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42918,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1817:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42943,
                  "src": "1803:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42917,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42920,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1842:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42943,
                  "src": "1834:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42922,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1877:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42943,
                  "src": "1869:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 42921,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:161:18"
            },
            "returnParameters": {
              "id": 42928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42974,
            "nodeType": "FunctionDefinition",
            "src": "2317:444:18",
            "nodes": [],
            "body": {
              "id": 42973,
              "nodeType": "Block",
              "src": "2426:335:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 42971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 42964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 42956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42954,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42946,
                            "src": "2455:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783031666663396137",
                            "id": 42955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2470:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33540519_by_1",
                              "typeString": "int_const 33540519"
                            },
                            "value": "0x01ffc9a7"
                          },
                          "src": "2455:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 42959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42957,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42946,
                            "src": "2530:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783830616335386364",
                            "id": 42958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2545:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2158778573_by_1",
                              "typeString": "int_const 2158778573"
                            },
                            "value": "0x80ac58cd"
                          },
                          "src": "2530:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2455:100:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 42963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42961,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42946,
                          "src": "2605:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783562356531333966",
                          "id": 42962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2620:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1532892063_by_1",
                            "typeString": "int_const 1532892063"
                          },
                          "value": "0x5b5e139f"
                        },
                        "src": "2605:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2455:175:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 42970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 42965,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42946,
                        "src": "2688:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42967,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44775,
                              "src": "2708:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$44775_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$44775_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 42966,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2703:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:14:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$44775",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 42969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2718:11:18",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2703:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2688:41:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2455:274:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42953,
                  "id": 42972,
                  "nodeType": "Return",
                  "src": "2436:293:18"
                }
              ]
            },
            "baseFunctions": [
              43509,
              44755
            ],
            "documentation": {
              "id": 42944,
              "nodeType": "StructuredDocumentation",
              "src": "2253:59:18",
              "text": "@dev See ERC165: https://eips.ethereum.org/EIPS/eip-165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2326:17:18",
            "overrides": {
              "id": 42950,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42948,
                  "name": "ERC721A",
                  "nameLocations": [
                    "2393:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "2393:7:18"
                },
                {
                  "id": 42949,
                  "name": "IERC165",
                  "nameLocations": [
                    "2402:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44756,
                  "src": "2402:7:18"
                }
              ],
              "src": "2384:26:18"
            },
            "parameters": {
              "id": 42947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42946,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2351:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 42974,
                  "src": "2344:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 42945,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:20:18"
            },
            "returnParameters": {
              "id": 42953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42974,
                  "src": "2420:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:6:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43018,
            "nodeType": "FunctionDefinition",
            "src": "3175:379:18",
            "nodes": [],
            "body": {
              "id": 43017,
              "nodeType": "Block",
              "src": "3264:290:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42984,
                      "mutability": "mutable",
                      "name": "fullUriForToken",
                      "nameLocation": "3288:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 43017,
                      "src": "3274:29:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 42983,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3274:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42988,
                  "initialValue": {
                    "baseExpression": {
                      "id": 42985,
                      "name": "fullURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42912,
                      "src": "3306:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 42987,
                    "indexExpression": {
                      "id": 42986,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42977,
                      "src": "3314:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3306:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3274:49:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 42991,
                            "name": "fullUriForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42984,
                            "src": "3343:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 42990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3337:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 42989,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3337:5:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3337:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 42993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3360:6:18",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3337:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3369:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3337:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42999,
                  "nodeType": "IfStatement",
                  "src": "3333:86:18",
                  "trueBody": {
                    "id": 42998,
                    "nodeType": "Block",
                    "src": "3372:47:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 42996,
                          "name": "fullUriForToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42984,
                          "src": "3393:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 42982,
                        "id": 42997,
                        "nodeType": "Return",
                        "src": "3386:22:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    43001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43001,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3443:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 43017,
                      "src": "3429:22:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 43000,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3429:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43005,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43003,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42977,
                        "src": "3466:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43002,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45158,
                      "src": "3454:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 43004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3429:46:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43010,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43001,
                            "src": "3516:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 43011,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42977,
                                "src": "3526:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 43012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3535:8:18",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46602,
                              "src": "3526:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 43013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:19:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 43008,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3499:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 43009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3503:12:18",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3499:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 43014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3499:47:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 43007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3492:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 43006,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3492:6:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 43015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 42982,
                  "id": 43016,
                  "nodeType": "Return",
                  "src": "3485:62:18"
                }
              ]
            },
            "baseFunctions": [
              43753
            ],
            "documentation": {
              "id": 42975,
              "nodeType": "StructuredDocumentation",
              "src": "2953:217:18",
              "text": "  @notice         Returns the metadata URI for an NFT.\n  @dev            See `BatchMintMetadata` for handling of metadata in this contract.\n  @param _tokenId The tokenId of an NFT."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3184:8:18",
            "overrides": {
              "id": 42979,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3231:8:18"
            },
            "parameters": {
              "id": 42978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42977,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3201:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43018,
                  "src": "3193:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3192:18:18"
            },
            "returnParameters": {
              "id": 42982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43018,
                  "src": "3249:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42980,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3248:15:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43045,
            "nodeType": "FunctionDefinition",
            "src": "4090:217:18",
            "nodes": [],
            "body": {
              "id": 43044,
              "nodeType": "Block",
              "src": "4159:148:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43027,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43304,
                          "src": "4177:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 43028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4177:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 43029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4189:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 43026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4169:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43031,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:46:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43033,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43098,
                          "src": "4238:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 43034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4238:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43035,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43023,
                        "src": "4259:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 43032,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43277,
                      "src": "4225:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 43036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43037,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:44:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43039,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43021,
                        "src": "4289:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4294:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 43041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4297:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 43038,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43994,
                        44157
                      ],
                      "referencedDeclaration": 44157,
                      "src": "4279:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 43042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43043,
                  "nodeType": "ExpressionStatement",
                  "src": "4279:21:18"
                }
              ]
            },
            "documentation": {
              "id": 43019,
              "nodeType": "StructuredDocumentation",
              "src": "3741:344:18",
              "text": "  @notice          Lets an authorized address mint an NFT to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _tokenURI The full metadata URI for the NFT minted."
            },
            "functionSelector": "0075a317",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "4099:6:18",
            "parameters": {
              "id": 43024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43021,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4114:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43045,
                  "src": "4106:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4106:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43023,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "4133:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43045,
                  "src": "4119:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4105:38:18"
            },
            "returnParameters": {
              "id": 43025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4159:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43077,
            "nodeType": "FunctionDefinition",
            "src": "4868:325:18",
            "nodes": [],
            "body": {
              "id": 43076,
              "nodeType": "Block",
              "src": "5018:175:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43058,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43304,
                          "src": "5036:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 43059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5036:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 43060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5048:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 43057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5028:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43062,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:46:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43064,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43098,
                          "src": "5103:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 43065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5103:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43066,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43050,
                        "src": "5124:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43067,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43052,
                        "src": "5135:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 43063,
                      "name": "_batchMintMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45210,
                      "src": "5084:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) returns (uint256,uint256)"
                      }
                    },
                    "id": 43068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:60:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 43069,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43071,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43048,
                        "src": "5164:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43072,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43050,
                        "src": "5169:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43073,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43054,
                        "src": "5180:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 43070,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43994,
                        44157
                      ],
                      "referencedDeclaration": 44157,
                      "src": "5154:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 43074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5154:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43075,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:32:18"
                }
              ]
            },
            "documentation": {
              "id": 43046,
              "nodeType": "StructuredDocumentation",
              "src": "4313:550:18",
              "text": "  @notice          Lets an authorized address mint multiple NFTs at once to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _quantity The number of NFTs to mint.\n  @param _baseURI  The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\n  @param _data     Additional data to pass along during the minting of the NFT."
            },
            "functionSelector": "754a81d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintTo",
            "nameLocation": "4877:11:18",
            "parameters": {
              "id": 43055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43048,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4906:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43077,
                  "src": "4898:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4898:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43050,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4927:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43077,
                  "src": "4919:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43052,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "4960:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43077,
                  "src": "4946:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4946:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43054,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4991:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43077,
                  "src": "4978:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4888:114:18"
            },
            "returnParameters": {
              "id": 43056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5018:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43089,
            "nodeType": "FunctionDefinition",
            "src": "5467:87:18",
            "nodes": [],
            "body": {
              "id": 43088,
              "nodeType": "Block",
              "src": "5516:38:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43084,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43080,
                        "src": "5532:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5542:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43083,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44457,
                        44639
                      ],
                      "referencedDeclaration": 44639,
                      "src": "5526:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 43086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5526:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43087,
                  "nodeType": "ExpressionStatement",
                  "src": "5526:21:18"
                }
              ]
            },
            "documentation": {
              "id": 43078,
              "nodeType": "StructuredDocumentation",
              "src": "5199:263:18",
              "text": "  @notice         Lets an owner or approved operator burn the NFT of the given tokenId.\n  @dev            ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\n  @param _tokenId The tokenId of the NFT to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5476:4:18",
            "parameters": {
              "id": 43081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43080,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5489:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43089,
                  "src": "5481:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5480:18:18"
            },
            "returnParameters": {
              "id": 43082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5516:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 43098,
            "nodeType": "FunctionDefinition",
            "src": "5809:104:18",
            "nodes": [],
            "body": {
              "id": 43097,
              "nodeType": "Block",
              "src": "5876:37:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43095,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43394,
                    "src": "5893:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43094,
                  "id": 43096,
                  "nodeType": "Return",
                  "src": "5886:20:18"
                }
              ]
            },
            "documentation": {
              "id": 43090,
              "nodeType": "StructuredDocumentation",
              "src": "5738:66:18",
              "text": "@notice The tokenId assigned to the next new NFT to be minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "5818:17:18",
            "parameters": {
              "id": 43091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5835:2:18"
            },
            "returnParameters": {
              "id": 43094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43093,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43098,
                  "src": "5867:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5867:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5866:9:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43133,
            "nodeType": "FunctionDefinition",
            "src": "6013:357:18",
            "nodes": [],
            "body": {
              "id": 43132,
              "nodeType": "Block",
              "src": "6168:202:18",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43109,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6186:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 43132,
                      "src": "6178:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43108,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6178:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43113,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43111,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43103,
                        "src": "6202:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43110,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43690,
                      "src": "6194:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 43112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6194:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6178:33:18"
                },
                {
                  "expression": {
                    "id": 43130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43114,
                      "name": "isApprovedOrOwnerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43106,
                      "src": "6221:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 43128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 43122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 43117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 43115,
                                "name": "_operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43101,
                                "src": "6244:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 43116,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43109,
                                "src": "6257:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6244:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 43119,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43109,
                                  "src": "6295:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 43120,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43101,
                                  "src": "6302:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 43118,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43882,
                                "src": "6278:16:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 43121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6278:34:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6244:68:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 43127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 43124,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43103,
                                  "src": "6340:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 43123,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43830,
                                "src": "6328:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 43125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6328:21:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 43126,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43101,
                              "src": "6353:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6328:34:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6244:118:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 43129,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6243:120:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6221:142:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43131,
                  "nodeType": "ExpressionStatement",
                  "src": "6221:142:18"
                }
              ]
            },
            "documentation": {
              "id": 43099,
              "nodeType": "StructuredDocumentation",
              "src": "5919:89:18",
              "text": "@notice Returns whether a given address is the owner, or approved to transfer an NFT."
            },
            "functionSelector": "430c2081",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "6022:17:18",
            "parameters": {
              "id": 43104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43101,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "6048:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43133,
                  "src": "6040:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6040:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43103,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6067:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43133,
                  "src": "6059:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6059:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6039:37:18"
            },
            "returnParameters": {
              "id": 43107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43106,
                  "mutability": "mutable",
                  "name": "isApprovedOrOwnerOf",
                  "nameLocation": "6143:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43133,
                  "src": "6138:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6138:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6137:26:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43154,
            "nodeType": "FunctionDefinition",
            "src": "6602:227:18",
            "nodes": [],
            "body": {
              "id": 43153,
              "nodeType": "Block",
              "src": "6769:60:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43149,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43136,
                        "src": "6803:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43150,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43138,
                        "src": "6813:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43146,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6779:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$43347_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 43148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6785:17:18",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43864,
                      "src": "6779:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 43151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6779:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43152,
                  "nodeType": "ExpressionStatement",
                  "src": "6779:43:18"
                }
              ]
            },
            "baseFunctions": [
              43864
            ],
            "documentation": {
              "id": 43134,
              "nodeType": "StructuredDocumentation",
              "src": "6557:40:18",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43143,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43136,
                    "src": "6755:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43142,
                  "name": "onlyAllowedOperatorApproval",
                  "nameLocations": [
                    "6727:27:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45467,
                  "src": "6727:27:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6727:37:18"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "6611:17:18",
            "overrides": {
              "id": 43141,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 43140,
                  "name": "ERC721A",
                  "nameLocations": [
                    "6710:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "6710:7:18"
                }
              ],
              "src": "6701:17:18"
            },
            "parameters": {
              "id": 43139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43136,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6637:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43154,
                  "src": "6629:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43138,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6652:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43154,
                  "src": "6647:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6647:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:33:18"
            },
            "returnParameters": {
              "id": 43145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6769:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43175,
            "nodeType": "FunctionDefinition",
            "src": "6870:208:18",
            "nodes": [],
            "body": {
              "id": 43174,
              "nodeType": "Block",
              "src": "7029:49:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43170,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43157,
                        "src": "7053:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43171,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43159,
                        "src": "7063:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 43167,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7039:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$43347_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 43169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7045:7:18",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43808,
                      "src": "7039:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7039:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43173,
                  "nodeType": "ExpressionStatement",
                  "src": "7039:32:18"
                }
              ]
            },
            "baseFunctions": [
              43808
            ],
            "documentation": {
              "id": 43155,
              "nodeType": "StructuredDocumentation",
              "src": "6835:30:18",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43164,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43157,
                    "src": "7015:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43163,
                  "name": "onlyAllowedOperatorApproval",
                  "nameLocations": [
                    "6987:27:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45467,
                  "src": "6987:27:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6987:37:18"
              }
            ],
            "name": "approve",
            "nameLocation": "6879:7:18",
            "overrides": {
              "id": 43162,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 43161,
                  "name": "ERC721A",
                  "nameLocations": [
                    "6970:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "6970:7:18"
                }
              ],
              "src": "6961:17:18"
            },
            "parameters": {
              "id": 43160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43157,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6895:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43175,
                  "src": "6887:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6887:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43159,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6913:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43175,
                  "src": "6905:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6905:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6886:35:18"
            },
            "returnParameters": {
              "id": 43166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7029:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43199,
            "nodeType": "FunctionDefinition",
            "src": "7125:208:18",
            "nodes": [],
            "body": {
              "id": 43198,
              "nodeType": "Block",
              "src": "7279:54:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43193,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43178,
                        "src": "7308:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43194,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43180,
                        "src": "7314:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43182,
                        "src": "7318:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 43190,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7289:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$43347_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 43192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7295:12:18",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43900,
                      "src": "7289:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 43196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7289:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43197,
                  "nodeType": "ExpressionStatement",
                  "src": "7289:37:18"
                }
              ]
            },
            "baseFunctions": [
              43900
            ],
            "documentation": {
              "id": 43176,
              "nodeType": "StructuredDocumentation",
              "src": "7084:36:18",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43187,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43178,
                    "src": "7273:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43186,
                  "name": "onlyAllowedOperator",
                  "nameLocations": [
                    "7253:19:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45457,
                  "src": "7253:19:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7253:25:18"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "7134:12:18",
            "overrides": {
              "id": 43185,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 43184,
                  "name": "ERC721A",
                  "nameLocations": [
                    "7244:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "7244:7:18"
                }
              ],
              "src": "7235:17:18"
            },
            "parameters": {
              "id": 43183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43178,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7164:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43199,
                  "src": "7156:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7156:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43180,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7186:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43199,
                  "src": "7178:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43182,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7206:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43199,
                  "src": "7198:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7198:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7146:73:18"
            },
            "returnParameters": {
              "id": 43189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7279:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43223,
            "nodeType": "FunctionDefinition",
            "src": "7384:216:18",
            "nodes": [],
            "body": {
              "id": 43222,
              "nodeType": "Block",
              "src": "7542:58:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43217,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43202,
                        "src": "7575:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43218,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43204,
                        "src": "7581:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43219,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43206,
                        "src": "7585:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 43214,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7552:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$43347_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 43216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7558:16:18",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43919,
                      "src": "7552:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 43220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43221,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:41:18"
                }
              ]
            },
            "baseFunctions": [
              43919
            ],
            "documentation": {
              "id": 43200,
              "nodeType": "StructuredDocumentation",
              "src": "7339:40:18",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43211,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43202,
                    "src": "7536:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43210,
                  "name": "onlyAllowedOperator",
                  "nameLocations": [
                    "7516:19:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45457,
                  "src": "7516:19:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7516:25:18"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7393:16:18",
            "overrides": {
              "id": 43209,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 43208,
                  "name": "ERC721A",
                  "nameLocations": [
                    "7507:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "7507:7:18"
                }
              ],
              "src": "7498:17:18"
            },
            "parameters": {
              "id": 43207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43202,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7427:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43223,
                  "src": "7419:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7419:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43204,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7449:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43223,
                  "src": "7441:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7441:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43206,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7469:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43223,
                  "src": "7461:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7461:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:73:18"
            },
            "returnParameters": {
              "id": 43213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7542:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43250,
            "nodeType": "FunctionDefinition",
            "src": "7651:249:18",
            "nodes": [],
            "body": {
              "id": 43249,
              "nodeType": "Block",
              "src": "7836:64:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43243,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43226,
                        "src": "7869:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43244,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43228,
                        "src": "7875:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43245,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43230,
                        "src": "7879:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43246,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43232,
                        "src": "7888:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 43240,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7846:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$43347_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 43242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7852:16:18",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43955,
                      "src": "7846:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 43247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7846:47:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43248,
                  "nodeType": "ExpressionStatement",
                  "src": "7846:47:18"
                }
              ]
            },
            "baseFunctions": [
              43955
            ],
            "documentation": {
              "id": 43224,
              "nodeType": "StructuredDocumentation",
              "src": "7606:40:18",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43237,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43226,
                    "src": "7830:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 43238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43236,
                  "name": "onlyAllowedOperator",
                  "nameLocations": [
                    "7810:19:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45457,
                  "src": "7810:19:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7810:25:18"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7660:16:18",
            "overrides": {
              "id": 43235,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 43234,
                  "name": "ERC721A",
                  "nameLocations": [
                    "7801:7:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44744,
                  "src": "7801:7:18"
                }
              ],
              "src": "7792:17:18"
            },
            "parameters": {
              "id": 43233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43226,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7694:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43250,
                  "src": "7686:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7686:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43228,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7716:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43250,
                  "src": "7708:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43230,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7736:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43250,
                  "src": "7728:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7728:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43232,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7766:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43250,
                  "src": "7753:17:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7676:100:18"
            },
            "returnParameters": {
              "id": 43239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7836:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 43277,
            "nodeType": "FunctionDefinition",
            "src": "8103:202:18",
            "nodes": [],
            "body": {
              "id": 43276,
              "nodeType": "Block",
              "src": "8185:120:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 43260,
                                  "name": "fullURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42912,
                                  "src": "8209:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                    "typeString": "mapping(uint256 => string storage ref)"
                                  }
                                },
                                "id": 43262,
                                "indexExpression": {
                                  "id": 43261,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43252,
                                  "src": "8217:8:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8209:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 43259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8203:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 43258,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "8203:5:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8203:24:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 43264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8228:6:18",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8203:31:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8238:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8203:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55524920616c726561647920736574",
                        "id": 43267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8241:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27d33880a42c6c5e26aeadac7f095967881b47de4646734561d17c92845393d6",
                          "typeString": "literal_string \"URI already set\""
                        },
                        "value": "URI already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27d33880a42c6c5e26aeadac7f095967881b47de4646734561d17c92845393d6",
                          "typeString": "literal_string \"URI already set\""
                        }
                      ],
                      "id": 43257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8195:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8195:64:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43269,
                  "nodeType": "ExpressionStatement",
                  "src": "8195:64:18"
                },
                {
                  "expression": {
                    "id": 43274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43270,
                        "name": "fullURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42912,
                        "src": "8269:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 43272,
                      "indexExpression": {
                        "id": 43271,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43252,
                        "src": "8277:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8269:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43273,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43254,
                      "src": "8289:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8269:29:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 43275,
                  "nodeType": "ExpressionStatement",
                  "src": "8269:29:18"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nameLocation": "8112:12:18",
            "parameters": {
              "id": 43255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43252,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8133:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43277,
                  "src": "8125:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8125:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43254,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "8157:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43277,
                  "src": "8143:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8143:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8124:43:18"
            },
            "returnParameters": {
              "id": 43256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8185:0:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 43291,
            "nodeType": "FunctionDefinition",
            "src": "8401:121:18",
            "nodes": [],
            "body": {
              "id": 43290,
              "nodeType": "Block",
              "src": "8477:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43284,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8494:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8498:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8494:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43286,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "8508:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8508:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8494:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43283,
                  "id": 43289,
                  "nodeType": "Return",
                  "src": "8487:28:18"
                }
              ]
            },
            "baseFunctions": [
              45268
            ],
            "documentation": {
              "id": 43278,
              "nodeType": "StructuredDocumentation",
              "src": "8311:85:18",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "8410:18:18",
            "overrides": {
              "id": 43280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8453:8:18"
            },
            "parameters": {
              "id": 43279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8428:2:18"
            },
            "returnParameters": {
              "id": 43283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43291,
                  "src": "8471:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43281,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8471:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8470:6:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 43304,
            "nodeType": "FunctionDefinition",
            "src": "8611:102:18",
            "nodes": [],
            "body": {
              "id": 43303,
              "nodeType": "Block",
              "src": "8668:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43297,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8685:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8689:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8685:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43299,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "8699:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8699:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8685:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43296,
                  "id": 43302,
                  "nodeType": "Return",
                  "src": "8678:28:18"
                }
              ]
            },
            "documentation": {
              "id": 43292,
              "nodeType": "StructuredDocumentation",
              "src": "8528:78:18",
              "text": "@dev Returns whether a token can be minted in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMint",
            "nameLocation": "8620:8:18",
            "parameters": {
              "id": 43293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8628:2:18"
            },
            "returnParameters": {
              "id": 43296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43304,
                  "src": "8662:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8662:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8661:6:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 43318,
            "nodeType": "FunctionDefinition",
            "src": "8797:115:18",
            "nodes": [],
            "body": {
              "id": 43317,
              "nodeType": "Block",
              "src": "8867:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43311,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8884:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8888:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8884:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43313,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "8898:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8898:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8884:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43310,
                  "id": 43316,
                  "nodeType": "Return",
                  "src": "8877:28:18"
                }
              ]
            },
            "baseFunctions": [
              45645
            ],
            "documentation": {
              "id": 43305,
              "nodeType": "StructuredDocumentation",
              "src": "8719:73:18",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "8806:12:18",
            "overrides": {
              "id": 43307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8843:8:18"
            },
            "parameters": {
              "id": 43306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8818:2:18"
            },
            "returnParameters": {
              "id": 43310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43318,
                  "src": "8861:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8861:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8860:6:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 43332,
            "nodeType": "FunctionDefinition",
            "src": "9003:121:18",
            "nodes": [],
            "body": {
              "id": 43331,
              "nodeType": "Block",
              "src": "9079:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43325,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9096:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9100:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9096:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43327,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "9110:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9110:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9096:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43324,
                  "id": 43330,
                  "nodeType": "Return",
                  "src": "9089:28:18"
                }
              ]
            },
            "baseFunctions": [
              45884
            ],
            "documentation": {
              "id": 43319,
              "nodeType": "StructuredDocumentation",
              "src": "8918:80:18",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "9012:18:18",
            "overrides": {
              "id": 43321,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9055:8:18"
            },
            "parameters": {
              "id": 43320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9030:2:18"
            },
            "returnParameters": {
              "id": 43324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43332,
                  "src": "9073:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9073:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9072:6:18"
            },
            "scope": 43347,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 43346,
            "nodeType": "FunctionDefinition",
            "src": "9223:124:18",
            "nodes": [],
            "body": {
              "id": 43345,
              "nodeType": "Block",
              "src": "9302:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43339,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9319:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9323:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9319:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43341,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45598,
                        "src": "9333:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9333:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9319:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43338,
                  "id": 43344,
                  "nodeType": "Return",
                  "src": "9312:28:18"
                }
              ]
            },
            "baseFunctions": [
              45409
            ],
            "documentation": {
              "id": 43333,
              "nodeType": "StructuredDocumentation",
              "src": "9130:88:18",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "9232:26:18",
            "overrides": {
              "id": 43335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9278:8:18"
            },
            "parameters": {
              "id": 43334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9258:2:18"
            },
            "returnParameters": {
              "id": 43338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43346,
                  "src": "9296:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9296:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9295:6:18"
            },
            "scope": 43347,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42892,
              "name": "ERC721A",
              "nameLocations": [
                "1155:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44744,
              "src": "1155:7:18"
            },
            "id": 42893,
            "nodeType": "InheritanceSpecifier",
            "src": "1155:7:18"
          },
          {
            "baseName": {
              "id": 42894,
              "name": "ContractMetadata",
              "nameLocations": [
                "1168:16:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45269,
              "src": "1168:16:18"
            },
            "id": 42895,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:16:18"
          },
          {
            "baseName": {
              "id": 42896,
              "name": "Multicall",
              "nameLocations": [
                "1190:9:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45367,
              "src": "1190:9:18"
            },
            "id": 42897,
            "nodeType": "InheritanceSpecifier",
            "src": "1190:9:18"
          },
          {
            "baseName": {
              "id": 42898,
              "name": "Ownable",
              "nameLocations": [
                "1205:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45646,
              "src": "1205:7:18"
            },
            "id": 42899,
            "nodeType": "InheritanceSpecifier",
            "src": "1205:7:18"
          },
          {
            "baseName": {
              "id": 42900,
              "name": "Royalty",
              "nameLocations": [
                "1218:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45885,
              "src": "1218:7:18"
            },
            "id": 42901,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:7:18"
          },
          {
            "baseName": {
              "id": 42902,
              "name": "BatchMintMetadata",
              "nameLocations": [
                "1231:17:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45211,
              "src": "1231:17:18"
            },
            "id": 42903,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:17:18"
          },
          {
            "baseName": {
              "id": 42904,
              "name": "DefaultOperatorFilterer",
              "nameLocations": [
                "1254:23:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45308,
              "src": "1254:23:18"
            },
            "id": 42905,
            "nodeType": "InheritanceSpecifier",
            "src": "1254:23:18"
          }
        ],
        "canonicalName": "ERC721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42891,
          "nodeType": "StructuredDocumentation",
          "src": "427:699:18",
          "text": "  The `ERC721Base` smart contract implements the ERC721 NFT standard, along with the ERC721A optimization to the standard.\n  It includes the following additions to standard ERC721 logic:\n      - Ability to mint NFTs via the provided `mint` function.\n      - Contract metadata for royalty support on platforms such as OpenSea that use\n        off-chain information to distribute roaylties.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - EIP 2981 compliance for royalty support on NFT marketplaces."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43347,
          45308,
          45564,
          45410,
          46135,
          45211,
          45885,
          46222,
          44775,
          45646,
          46158,
          45367,
          45922,
          45269,
          45908,
          44744,
          44959,
          44983,
          44888,
          43371,
          44756,
          46742
        ],
        "name": "ERC721Base",
        "nameLocation": "1137:10:18",
        "scope": 43348,
        "usedErrors": [
          44900,
          44903,
          44906,
          44909,
          44912,
          44915,
          44918,
          44921,
          44924,
          44927,
          44930,
          44933,
          44936,
          45421
        ],
        "usedEvents": [
          44787,
          44796,
          44805,
          45907,
          46124,
          46157,
          46212,
          46221
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 18
}